//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace GetWebXML.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.Service1Soap")]
    public interface Service1Soap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCGetAllConnStr", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDCGetAllConnStr(System.AsyncCallback callback, object asyncState);
        
        string EndDCGetAllConnStr(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOS_VSFileReadByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginIOS_VSFileReadByID(string jsonData, System.AsyncCallback callback, object asyncState);
        
        string EndIOS_VSFileReadByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOS_DSReadData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginIOS_DSReadData(string jsonData, System.AsyncCallback callback, object asyncState);
        
        string EndIOS_DSReadData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOS_FMGetFileByParent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginIOS_FMGetFileByParent(string jsonData, System.AsyncCallback callback, object asyncState);
        
        string EndIOS_FMGetFileByParent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOS_VSGetPudversions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginIOS_VSGetPudversions(System.AsyncCallback callback, object asyncState);
        
        string EndIOS_VSGetPudversions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VerifyLicense", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVerifyLicense(System.AsyncCallback callback, object asyncState);
        
        void EndVerifyLicense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTQueryScMethod", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTQueryScMethod(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVTQueryScMethod(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTAllEntitys", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTAllEntitys(System.AsyncCallback callback, object asyncState);
        
        void EndVTAllEntitys(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DSExcelGetAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDSExcelGetAll(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDSExcelGetAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DSExcelGetSheetName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDSExcelGetSheetName(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDSExcelGetSheetName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DSExcelTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDSExcelTest(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDSExcelTest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetImageList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetImageList(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndGetImageList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ImageReName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginImageReName(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndImageReName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ImageDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginImageDelete(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndImageDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ReadConfigXmlList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginReadConfigXmlList(string path, string extensionName, System.AsyncCallback callback, object asyncState);
        
        string EndReadConfigXmlList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveScMethodInfoTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveScMethodInfoTest(System.AsyncCallback callback, object asyncState);
        
        bool EndSaveScMethodInfoTest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDCSave(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDCSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDCDelete(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDCDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDCTest(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDCTest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCGetAllConn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDCGetAllConn(System.AsyncCallback callback, object asyncState);
        
        void EndDCGetAllConn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCGetNamesByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDCGetNamesByID(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDCGetNamesByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCGetColumnsByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDCGetColumnsByID(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDCGetColumnsByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCGetDataByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDCGetDataByID(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDCGetDataByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCGetConnDByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDCGetConnDByID(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDCGetConnDByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTColumInfos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTColumInfos(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVTColumInfos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTSave(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVTSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTDelete(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVTDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTGetVirtualTableByDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTGetVirtualTableByDS(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVTGetVirtualTableByDS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTGetDataBySql", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTGetDataBySql(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVTGetDataBySql(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTGetTableDetailsByDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTGetTableDetailsByDS(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVTGetTableDetailsByDS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DSSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDSSave(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDSSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DSDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDSDelete(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDSDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DSAllDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDSAllDataSet(System.AsyncCallback callback, object asyncState);
        
        void EndDSAllDataSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DSDataSetByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDSDataSetByID(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDSDataSetByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DSReadData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDSReadData(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDSReadData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DSTestData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDSTestData(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDSTestData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DSBAGetAllType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDSBAGetAllType(System.AsyncCallback callback, object asyncState);
        
        void EndDSBAGetAllType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DSBAGetDataByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDSBAGetDataByType(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDSBAGetDataByType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DSBAGetDataByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDSBAGetDataByID(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDSBAGetDataByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/test00001", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult Begintest00001(System.AsyncCallback callback, object asyncState);
        
        void Endtest00001(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FMFolderAdd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginFMFolderAdd(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndFMFolderAdd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FMFolderDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginFMFolderDelete(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndFMFolderDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FMGetFileByParent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginFMGetFileByParent(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndFMGetFileByParent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VSFileSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVSFileSave(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVSFileSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VSFileReadByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVSFileReadByID(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVSFileReadByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VSFileDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVSFileDelete(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVSFileDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VSGetVirtualTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVSGetVirtualTable(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVSGetVirtualTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VSGetResources", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVSGetResources(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVSGetResources(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VSGetversionsBypageName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVSGetversionsBypageName(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVSGetversionsBypageName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VSGetPudversions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVSGetPudversions(System.AsyncCallback callback, object asyncState);
        
        void EndVSGetPudversions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VSUpdatePubstate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVSUpdatePubstate(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVSUpdatePubstate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RtdbGetTagByIPTag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRtdbGetTagByIPTag(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRtdbGetTagByIPTag(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RtdbGetHisData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRtdbGetHisData(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRtdbGetHisData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RtdbConnTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRtdbConnTest(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRtdbConnTest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RtdbSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRtdbSave(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRtdbSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RtdbDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRtdbDelete(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRtdbDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RtdbLoad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRtdbLoad(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRtdbLoad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RPSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRPSave(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRPSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RPLoad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRPLoad(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRPLoad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RPDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRPDelete(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRPDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RGSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRGSave(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRGSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RGLoad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRGLoad(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRGLoad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RGDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRGDelete(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRGDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RCSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRCSave(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRCSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RCLoad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRCLoad(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRCLoad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RCDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRCDelete(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRCDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RPQueryRTDBinfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRPQueryRTDBinfo(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRPQueryRTDBinfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RtdbGetpoints", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRtdbGetpoints(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRtdbGetpoints(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RCalHistogram", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRCalHistogram(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRCalHistogram(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RCalNormalDis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRCalNormalDis(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRCalNormalDis(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RCalProcessCap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRCalProcessCap(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRCalProcessCap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RCalProcessPer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRCalProcessPer(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRCalProcessPer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RCalBoxplot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRCalBoxplot(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRCalBoxplot(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RCalMeanRange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRCalMeanRange(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRCalMeanRange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RCal4MR_Plot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRCal4MR_Plot(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRCal4MR_Plot(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RCalIVPlot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRCalIVPlot(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRCalIVPlot(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RCalMeanSDPlot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRCalMeanSDPlot(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndRCalMeanSDPlot(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PageExport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginPageExport(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndPageExport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DeleteExportFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDeleteExportFile(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteExportFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/HtmlToPage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginHtmlToPage(System.AsyncCallback callback, object asyncState);
        
        void EndHtmlToPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/HtmlToPdf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginHtmlToPdf(System.AsyncCallback callback, object asyncState);
        
        void EndHtmlToPdf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MagicExport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginMagicExport(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndMagicExport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/deleteFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegindeleteFile(string filePath, System.AsyncCallback callback, object asyncState);
        
        void EnddeleteFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTSaveScMethodInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTSaveScMethodInfo(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVTSaveScMethodInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTGetScMethodInfoEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTGetScMethodInfoEx(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVTGetScMethodInfoEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTGetScMethodInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTGetScMethodInfo(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVTGetScMethodInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTReadMethodParams", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTReadMethodParams(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVTReadMethodParams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VTReadDataTableSchema", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginVTReadDataTableSchema(string jsonData, System.AsyncCallback callback, object asyncState);
        
        void EndVTReadDataTableSchema(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1SoapChannel : GetWebXML.ServiceReference1.Service1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DCGetAllConnStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DCGetAllConnStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IOS_VSFileReadByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IOS_VSFileReadByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IOS_DSReadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IOS_DSReadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IOS_FMGetFileByParentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IOS_FMGetFileByParentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IOS_VSGetPudversionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IOS_VSGetPudversionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadConfigXmlListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReadConfigXmlListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveScMethodInfoTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveScMethodInfoTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1SoapClient : System.ServiceModel.ClientBase<GetWebXML.ServiceReference1.Service1Soap>, GetWebXML.ServiceReference1.Service1Soap {
        
        private BeginOperationDelegate onBeginDCGetAllConnStrDelegate;
        
        private EndOperationDelegate onEndDCGetAllConnStrDelegate;
        
        private System.Threading.SendOrPostCallback onDCGetAllConnStrCompletedDelegate;
        
        private BeginOperationDelegate onBeginIOS_VSFileReadByIDDelegate;
        
        private EndOperationDelegate onEndIOS_VSFileReadByIDDelegate;
        
        private System.Threading.SendOrPostCallback onIOS_VSFileReadByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginIOS_DSReadDataDelegate;
        
        private EndOperationDelegate onEndIOS_DSReadDataDelegate;
        
        private System.Threading.SendOrPostCallback onIOS_DSReadDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginIOS_FMGetFileByParentDelegate;
        
        private EndOperationDelegate onEndIOS_FMGetFileByParentDelegate;
        
        private System.Threading.SendOrPostCallback onIOS_FMGetFileByParentCompletedDelegate;
        
        private BeginOperationDelegate onBeginIOS_VSGetPudversionsDelegate;
        
        private EndOperationDelegate onEndIOS_VSGetPudversionsDelegate;
        
        private System.Threading.SendOrPostCallback onIOS_VSGetPudversionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginVerifyLicenseDelegate;
        
        private EndOperationDelegate onEndVerifyLicenseDelegate;
        
        private System.Threading.SendOrPostCallback onVerifyLicenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTQueryScMethodDelegate;
        
        private EndOperationDelegate onEndVTQueryScMethodDelegate;
        
        private System.Threading.SendOrPostCallback onVTQueryScMethodCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTAllEntitysDelegate;
        
        private EndOperationDelegate onEndVTAllEntitysDelegate;
        
        private System.Threading.SendOrPostCallback onVTAllEntitysCompletedDelegate;
        
        private BeginOperationDelegate onBeginDSExcelGetAllDelegate;
        
        private EndOperationDelegate onEndDSExcelGetAllDelegate;
        
        private System.Threading.SendOrPostCallback onDSExcelGetAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginDSExcelGetSheetNameDelegate;
        
        private EndOperationDelegate onEndDSExcelGetSheetNameDelegate;
        
        private System.Threading.SendOrPostCallback onDSExcelGetSheetNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginDSExcelTestDelegate;
        
        private EndOperationDelegate onEndDSExcelTestDelegate;
        
        private System.Threading.SendOrPostCallback onDSExcelTestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetImageListDelegate;
        
        private EndOperationDelegate onEndGetImageListDelegate;
        
        private System.Threading.SendOrPostCallback onGetImageListCompletedDelegate;
        
        private BeginOperationDelegate onBeginImageReNameDelegate;
        
        private EndOperationDelegate onEndImageReNameDelegate;
        
        private System.Threading.SendOrPostCallback onImageReNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginImageDeleteDelegate;
        
        private EndOperationDelegate onEndImageDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onImageDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginReadConfigXmlListDelegate;
        
        private EndOperationDelegate onEndReadConfigXmlListDelegate;
        
        private System.Threading.SendOrPostCallback onReadConfigXmlListCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveScMethodInfoTestDelegate;
        
        private EndOperationDelegate onEndSaveScMethodInfoTestDelegate;
        
        private System.Threading.SendOrPostCallback onSaveScMethodInfoTestCompletedDelegate;
        
        private BeginOperationDelegate onBeginDCSaveDelegate;
        
        private EndOperationDelegate onEndDCSaveDelegate;
        
        private System.Threading.SendOrPostCallback onDCSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginDCDeleteDelegate;
        
        private EndOperationDelegate onEndDCDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDCDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDCTestDelegate;
        
        private EndOperationDelegate onEndDCTestDelegate;
        
        private System.Threading.SendOrPostCallback onDCTestCompletedDelegate;
        
        private BeginOperationDelegate onBeginDCGetAllConnDelegate;
        
        private EndOperationDelegate onEndDCGetAllConnDelegate;
        
        private System.Threading.SendOrPostCallback onDCGetAllConnCompletedDelegate;
        
        private BeginOperationDelegate onBeginDCGetNamesByIDDelegate;
        
        private EndOperationDelegate onEndDCGetNamesByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDCGetNamesByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDCGetColumnsByIDDelegate;
        
        private EndOperationDelegate onEndDCGetColumnsByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDCGetColumnsByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDCGetDataByIDDelegate;
        
        private EndOperationDelegate onEndDCGetDataByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDCGetDataByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDCGetConnDByIDDelegate;
        
        private EndOperationDelegate onEndDCGetConnDByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDCGetConnDByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTColumInfosDelegate;
        
        private EndOperationDelegate onEndVTColumInfosDelegate;
        
        private System.Threading.SendOrPostCallback onVTColumInfosCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTSaveDelegate;
        
        private EndOperationDelegate onEndVTSaveDelegate;
        
        private System.Threading.SendOrPostCallback onVTSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTDeleteDelegate;
        
        private EndOperationDelegate onEndVTDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onVTDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTGetVirtualTableByDSDelegate;
        
        private EndOperationDelegate onEndVTGetVirtualTableByDSDelegate;
        
        private System.Threading.SendOrPostCallback onVTGetVirtualTableByDSCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTGetDataBySqlDelegate;
        
        private EndOperationDelegate onEndVTGetDataBySqlDelegate;
        
        private System.Threading.SendOrPostCallback onVTGetDataBySqlCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTGetTableDetailsByDSDelegate;
        
        private EndOperationDelegate onEndVTGetTableDetailsByDSDelegate;
        
        private System.Threading.SendOrPostCallback onVTGetTableDetailsByDSCompletedDelegate;
        
        private BeginOperationDelegate onBeginDSSaveDelegate;
        
        private EndOperationDelegate onEndDSSaveDelegate;
        
        private System.Threading.SendOrPostCallback onDSSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginDSDeleteDelegate;
        
        private EndOperationDelegate onEndDSDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDSDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDSAllDataSetDelegate;
        
        private EndOperationDelegate onEndDSAllDataSetDelegate;
        
        private System.Threading.SendOrPostCallback onDSAllDataSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginDSDataSetByIDDelegate;
        
        private EndOperationDelegate onEndDSDataSetByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDSDataSetByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDSReadDataDelegate;
        
        private EndOperationDelegate onEndDSReadDataDelegate;
        
        private System.Threading.SendOrPostCallback onDSReadDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDSTestDataDelegate;
        
        private EndOperationDelegate onEndDSTestDataDelegate;
        
        private System.Threading.SendOrPostCallback onDSTestDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDSBAGetAllTypeDelegate;
        
        private EndOperationDelegate onEndDSBAGetAllTypeDelegate;
        
        private System.Threading.SendOrPostCallback onDSBAGetAllTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDSBAGetDataByTypeDelegate;
        
        private EndOperationDelegate onEndDSBAGetDataByTypeDelegate;
        
        private System.Threading.SendOrPostCallback onDSBAGetDataByTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDSBAGetDataByIDDelegate;
        
        private EndOperationDelegate onEndDSBAGetDataByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDSBAGetDataByIDCompletedDelegate;
        
        private BeginOperationDelegate onBegintest00001Delegate;
        
        private EndOperationDelegate onEndtest00001Delegate;
        
        private System.Threading.SendOrPostCallback ontest00001CompletedDelegate;
        
        private BeginOperationDelegate onBeginFMFolderAddDelegate;
        
        private EndOperationDelegate onEndFMFolderAddDelegate;
        
        private System.Threading.SendOrPostCallback onFMFolderAddCompletedDelegate;
        
        private BeginOperationDelegate onBeginFMFolderDeleteDelegate;
        
        private EndOperationDelegate onEndFMFolderDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onFMFolderDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginFMGetFileByParentDelegate;
        
        private EndOperationDelegate onEndFMGetFileByParentDelegate;
        
        private System.Threading.SendOrPostCallback onFMGetFileByParentCompletedDelegate;
        
        private BeginOperationDelegate onBeginVSFileSaveDelegate;
        
        private EndOperationDelegate onEndVSFileSaveDelegate;
        
        private System.Threading.SendOrPostCallback onVSFileSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginVSFileReadByIDDelegate;
        
        private EndOperationDelegate onEndVSFileReadByIDDelegate;
        
        private System.Threading.SendOrPostCallback onVSFileReadByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginVSFileDeleteDelegate;
        
        private EndOperationDelegate onEndVSFileDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onVSFileDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginVSGetVirtualTableDelegate;
        
        private EndOperationDelegate onEndVSGetVirtualTableDelegate;
        
        private System.Threading.SendOrPostCallback onVSGetVirtualTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginVSGetResourcesDelegate;
        
        private EndOperationDelegate onEndVSGetResourcesDelegate;
        
        private System.Threading.SendOrPostCallback onVSGetResourcesCompletedDelegate;
        
        private BeginOperationDelegate onBeginVSGetversionsBypageNameDelegate;
        
        private EndOperationDelegate onEndVSGetversionsBypageNameDelegate;
        
        private System.Threading.SendOrPostCallback onVSGetversionsBypageNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginVSGetPudversionsDelegate;
        
        private EndOperationDelegate onEndVSGetPudversionsDelegate;
        
        private System.Threading.SendOrPostCallback onVSGetPudversionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginVSUpdatePubstateDelegate;
        
        private EndOperationDelegate onEndVSUpdatePubstateDelegate;
        
        private System.Threading.SendOrPostCallback onVSUpdatePubstateCompletedDelegate;
        
        private BeginOperationDelegate onBeginRtdbGetTagByIPTagDelegate;
        
        private EndOperationDelegate onEndRtdbGetTagByIPTagDelegate;
        
        private System.Threading.SendOrPostCallback onRtdbGetTagByIPTagCompletedDelegate;
        
        private BeginOperationDelegate onBeginRtdbGetHisDataDelegate;
        
        private EndOperationDelegate onEndRtdbGetHisDataDelegate;
        
        private System.Threading.SendOrPostCallback onRtdbGetHisDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRtdbConnTestDelegate;
        
        private EndOperationDelegate onEndRtdbConnTestDelegate;
        
        private System.Threading.SendOrPostCallback onRtdbConnTestCompletedDelegate;
        
        private BeginOperationDelegate onBeginRtdbSaveDelegate;
        
        private EndOperationDelegate onEndRtdbSaveDelegate;
        
        private System.Threading.SendOrPostCallback onRtdbSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginRtdbDeleteDelegate;
        
        private EndOperationDelegate onEndRtdbDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onRtdbDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginRtdbLoadDelegate;
        
        private EndOperationDelegate onEndRtdbLoadDelegate;
        
        private System.Threading.SendOrPostCallback onRtdbLoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginRPSaveDelegate;
        
        private EndOperationDelegate onEndRPSaveDelegate;
        
        private System.Threading.SendOrPostCallback onRPSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginRPLoadDelegate;
        
        private EndOperationDelegate onEndRPLoadDelegate;
        
        private System.Threading.SendOrPostCallback onRPLoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginRPDeleteDelegate;
        
        private EndOperationDelegate onEndRPDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onRPDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginRGSaveDelegate;
        
        private EndOperationDelegate onEndRGSaveDelegate;
        
        private System.Threading.SendOrPostCallback onRGSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginRGLoadDelegate;
        
        private EndOperationDelegate onEndRGLoadDelegate;
        
        private System.Threading.SendOrPostCallback onRGLoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginRGDeleteDelegate;
        
        private EndOperationDelegate onEndRGDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onRGDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginRCSaveDelegate;
        
        private EndOperationDelegate onEndRCSaveDelegate;
        
        private System.Threading.SendOrPostCallback onRCSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginRCLoadDelegate;
        
        private EndOperationDelegate onEndRCLoadDelegate;
        
        private System.Threading.SendOrPostCallback onRCLoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginRCDeleteDelegate;
        
        private EndOperationDelegate onEndRCDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onRCDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginRPQueryRTDBinfoDelegate;
        
        private EndOperationDelegate onEndRPQueryRTDBinfoDelegate;
        
        private System.Threading.SendOrPostCallback onRPQueryRTDBinfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginRtdbGetpointsDelegate;
        
        private EndOperationDelegate onEndRtdbGetpointsDelegate;
        
        private System.Threading.SendOrPostCallback onRtdbGetpointsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRCalHistogramDelegate;
        
        private EndOperationDelegate onEndRCalHistogramDelegate;
        
        private System.Threading.SendOrPostCallback onRCalHistogramCompletedDelegate;
        
        private BeginOperationDelegate onBeginRCalNormalDisDelegate;
        
        private EndOperationDelegate onEndRCalNormalDisDelegate;
        
        private System.Threading.SendOrPostCallback onRCalNormalDisCompletedDelegate;
        
        private BeginOperationDelegate onBeginRCalProcessCapDelegate;
        
        private EndOperationDelegate onEndRCalProcessCapDelegate;
        
        private System.Threading.SendOrPostCallback onRCalProcessCapCompletedDelegate;
        
        private BeginOperationDelegate onBeginRCalProcessPerDelegate;
        
        private EndOperationDelegate onEndRCalProcessPerDelegate;
        
        private System.Threading.SendOrPostCallback onRCalProcessPerCompletedDelegate;
        
        private BeginOperationDelegate onBeginRCalBoxplotDelegate;
        
        private EndOperationDelegate onEndRCalBoxplotDelegate;
        
        private System.Threading.SendOrPostCallback onRCalBoxplotCompletedDelegate;
        
        private BeginOperationDelegate onBeginRCalMeanRangeDelegate;
        
        private EndOperationDelegate onEndRCalMeanRangeDelegate;
        
        private System.Threading.SendOrPostCallback onRCalMeanRangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginRCal4MR_PlotDelegate;
        
        private EndOperationDelegate onEndRCal4MR_PlotDelegate;
        
        private System.Threading.SendOrPostCallback onRCal4MR_PlotCompletedDelegate;
        
        private BeginOperationDelegate onBeginRCalIVPlotDelegate;
        
        private EndOperationDelegate onEndRCalIVPlotDelegate;
        
        private System.Threading.SendOrPostCallback onRCalIVPlotCompletedDelegate;
        
        private BeginOperationDelegate onBeginRCalMeanSDPlotDelegate;
        
        private EndOperationDelegate onEndRCalMeanSDPlotDelegate;
        
        private System.Threading.SendOrPostCallback onRCalMeanSDPlotCompletedDelegate;
        
        private BeginOperationDelegate onBeginPageExportDelegate;
        
        private EndOperationDelegate onEndPageExportDelegate;
        
        private System.Threading.SendOrPostCallback onPageExportCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteExportFileDelegate;
        
        private EndOperationDelegate onEndDeleteExportFileDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteExportFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginHtmlToPageDelegate;
        
        private EndOperationDelegate onEndHtmlToPageDelegate;
        
        private System.Threading.SendOrPostCallback onHtmlToPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginHtmlToPdfDelegate;
        
        private EndOperationDelegate onEndHtmlToPdfDelegate;
        
        private System.Threading.SendOrPostCallback onHtmlToPdfCompletedDelegate;
        
        private BeginOperationDelegate onBeginMagicExportDelegate;
        
        private EndOperationDelegate onEndMagicExportDelegate;
        
        private System.Threading.SendOrPostCallback onMagicExportCompletedDelegate;
        
        private BeginOperationDelegate onBegindeleteFileDelegate;
        
        private EndOperationDelegate onEnddeleteFileDelegate;
        
        private System.Threading.SendOrPostCallback ondeleteFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTSaveScMethodInfoDelegate;
        
        private EndOperationDelegate onEndVTSaveScMethodInfoDelegate;
        
        private System.Threading.SendOrPostCallback onVTSaveScMethodInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTGetScMethodInfoExDelegate;
        
        private EndOperationDelegate onEndVTGetScMethodInfoExDelegate;
        
        private System.Threading.SendOrPostCallback onVTGetScMethodInfoExCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTGetScMethodInfoDelegate;
        
        private EndOperationDelegate onEndVTGetScMethodInfoDelegate;
        
        private System.Threading.SendOrPostCallback onVTGetScMethodInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTReadMethodParamsDelegate;
        
        private EndOperationDelegate onEndVTReadMethodParamsDelegate;
        
        private System.Threading.SendOrPostCallback onVTReadMethodParamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginVTReadDataTableSchemaDelegate;
        
        private EndOperationDelegate onEndVTReadDataTableSchemaDelegate;
        
        private System.Threading.SendOrPostCallback onVTReadDataTableSchemaCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1SoapClient() {
        }
        
        public Service1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<DCGetAllConnStrCompletedEventArgs> DCGetAllConnStrCompleted;
        
        public event System.EventHandler<IOS_VSFileReadByIDCompletedEventArgs> IOS_VSFileReadByIDCompleted;
        
        public event System.EventHandler<IOS_DSReadDataCompletedEventArgs> IOS_DSReadDataCompleted;
        
        public event System.EventHandler<IOS_FMGetFileByParentCompletedEventArgs> IOS_FMGetFileByParentCompleted;
        
        public event System.EventHandler<IOS_VSGetPudversionsCompletedEventArgs> IOS_VSGetPudversionsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VerifyLicenseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTQueryScMethodCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTAllEntitysCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DSExcelGetAllCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DSExcelGetSheetNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DSExcelTestCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetImageListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ImageReNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ImageDeleteCompleted;
        
        public event System.EventHandler<ReadConfigXmlListCompletedEventArgs> ReadConfigXmlListCompleted;
        
        public event System.EventHandler<SaveScMethodInfoTestCompletedEventArgs> SaveScMethodInfoTestCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DCSaveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DCDeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DCTestCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DCGetAllConnCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DCGetNamesByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DCGetColumnsByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DCGetDataByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DCGetConnDByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTColumInfosCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTSaveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTDeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTGetVirtualTableByDSCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTGetDataBySqlCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTGetTableDetailsByDSCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DSSaveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DSDeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DSAllDataSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DSDataSetByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DSReadDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DSTestDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DSBAGetAllTypeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DSBAGetDataByTypeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DSBAGetDataByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> test00001Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> FMFolderAddCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> FMFolderDeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> FMGetFileByParentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VSFileSaveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VSFileReadByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VSFileDeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VSGetVirtualTableCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VSGetResourcesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VSGetversionsBypageNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VSGetPudversionsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VSUpdatePubstateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RtdbGetTagByIPTagCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RtdbGetHisDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RtdbConnTestCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RtdbSaveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RtdbDeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RtdbLoadCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RPSaveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RPLoadCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RPDeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RGSaveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RGLoadCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RGDeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RCSaveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RCLoadCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RCDeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RPQueryRTDBinfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RtdbGetpointsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RCalHistogramCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RCalNormalDisCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RCalProcessCapCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RCalProcessPerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RCalBoxplotCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RCalMeanRangeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RCal4MR_PlotCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RCalIVPlotCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RCalMeanSDPlotCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PageExportCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteExportFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> HtmlToPageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> HtmlToPdfCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MagicExportCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> deleteFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTSaveScMethodInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTGetScMethodInfoExCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTGetScMethodInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTReadMethodParamsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VTReadDataTableSchemaCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDCGetAllConnStr(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDCGetAllConnStr(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GetWebXML.ServiceReference1.Service1Soap.EndDCGetAllConnStr(System.IAsyncResult result) {
            return base.Channel.EndDCGetAllConnStr(result);
        }
        
        private System.IAsyncResult OnBeginDCGetAllConnStr(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDCGetAllConnStr(callback, asyncState);
        }
        
        private object[] OnEndDCGetAllConnStr(System.IAsyncResult result) {
            string retVal = ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDCGetAllConnStr(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDCGetAllConnStrCompleted(object state) {
            if ((this.DCGetAllConnStrCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DCGetAllConnStrCompleted(this, new DCGetAllConnStrCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DCGetAllConnStrAsync() {
            this.DCGetAllConnStrAsync(null);
        }
        
        public void DCGetAllConnStrAsync(object userState) {
            if ((this.onBeginDCGetAllConnStrDelegate == null)) {
                this.onBeginDCGetAllConnStrDelegate = new BeginOperationDelegate(this.OnBeginDCGetAllConnStr);
            }
            if ((this.onEndDCGetAllConnStrDelegate == null)) {
                this.onEndDCGetAllConnStrDelegate = new EndOperationDelegate(this.OnEndDCGetAllConnStr);
            }
            if ((this.onDCGetAllConnStrCompletedDelegate == null)) {
                this.onDCGetAllConnStrCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDCGetAllConnStrCompleted);
            }
            base.InvokeAsync(this.onBeginDCGetAllConnStrDelegate, null, this.onEndDCGetAllConnStrDelegate, this.onDCGetAllConnStrCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginIOS_VSFileReadByID(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIOS_VSFileReadByID(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GetWebXML.ServiceReference1.Service1Soap.EndIOS_VSFileReadByID(System.IAsyncResult result) {
            return base.Channel.EndIOS_VSFileReadByID(result);
        }
        
        private System.IAsyncResult OnBeginIOS_VSFileReadByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginIOS_VSFileReadByID(jsonData, callback, asyncState);
        }
        
        private object[] OnEndIOS_VSFileReadByID(System.IAsyncResult result) {
            string retVal = ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndIOS_VSFileReadByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIOS_VSFileReadByIDCompleted(object state) {
            if ((this.IOS_VSFileReadByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IOS_VSFileReadByIDCompleted(this, new IOS_VSFileReadByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IOS_VSFileReadByIDAsync(string jsonData) {
            this.IOS_VSFileReadByIDAsync(jsonData, null);
        }
        
        public void IOS_VSFileReadByIDAsync(string jsonData, object userState) {
            if ((this.onBeginIOS_VSFileReadByIDDelegate == null)) {
                this.onBeginIOS_VSFileReadByIDDelegate = new BeginOperationDelegate(this.OnBeginIOS_VSFileReadByID);
            }
            if ((this.onEndIOS_VSFileReadByIDDelegate == null)) {
                this.onEndIOS_VSFileReadByIDDelegate = new EndOperationDelegate(this.OnEndIOS_VSFileReadByID);
            }
            if ((this.onIOS_VSFileReadByIDCompletedDelegate == null)) {
                this.onIOS_VSFileReadByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIOS_VSFileReadByIDCompleted);
            }
            base.InvokeAsync(this.onBeginIOS_VSFileReadByIDDelegate, new object[] {
                        jsonData}, this.onEndIOS_VSFileReadByIDDelegate, this.onIOS_VSFileReadByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginIOS_DSReadData(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIOS_DSReadData(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GetWebXML.ServiceReference1.Service1Soap.EndIOS_DSReadData(System.IAsyncResult result) {
            return base.Channel.EndIOS_DSReadData(result);
        }
        
        private System.IAsyncResult OnBeginIOS_DSReadData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginIOS_DSReadData(jsonData, callback, asyncState);
        }
        
        private object[] OnEndIOS_DSReadData(System.IAsyncResult result) {
            string retVal = ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndIOS_DSReadData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIOS_DSReadDataCompleted(object state) {
            if ((this.IOS_DSReadDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IOS_DSReadDataCompleted(this, new IOS_DSReadDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IOS_DSReadDataAsync(string jsonData) {
            this.IOS_DSReadDataAsync(jsonData, null);
        }
        
        public void IOS_DSReadDataAsync(string jsonData, object userState) {
            if ((this.onBeginIOS_DSReadDataDelegate == null)) {
                this.onBeginIOS_DSReadDataDelegate = new BeginOperationDelegate(this.OnBeginIOS_DSReadData);
            }
            if ((this.onEndIOS_DSReadDataDelegate == null)) {
                this.onEndIOS_DSReadDataDelegate = new EndOperationDelegate(this.OnEndIOS_DSReadData);
            }
            if ((this.onIOS_DSReadDataCompletedDelegate == null)) {
                this.onIOS_DSReadDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIOS_DSReadDataCompleted);
            }
            base.InvokeAsync(this.onBeginIOS_DSReadDataDelegate, new object[] {
                        jsonData}, this.onEndIOS_DSReadDataDelegate, this.onIOS_DSReadDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginIOS_FMGetFileByParent(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIOS_FMGetFileByParent(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GetWebXML.ServiceReference1.Service1Soap.EndIOS_FMGetFileByParent(System.IAsyncResult result) {
            return base.Channel.EndIOS_FMGetFileByParent(result);
        }
        
        private System.IAsyncResult OnBeginIOS_FMGetFileByParent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginIOS_FMGetFileByParent(jsonData, callback, asyncState);
        }
        
        private object[] OnEndIOS_FMGetFileByParent(System.IAsyncResult result) {
            string retVal = ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndIOS_FMGetFileByParent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIOS_FMGetFileByParentCompleted(object state) {
            if ((this.IOS_FMGetFileByParentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IOS_FMGetFileByParentCompleted(this, new IOS_FMGetFileByParentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IOS_FMGetFileByParentAsync(string jsonData) {
            this.IOS_FMGetFileByParentAsync(jsonData, null);
        }
        
        public void IOS_FMGetFileByParentAsync(string jsonData, object userState) {
            if ((this.onBeginIOS_FMGetFileByParentDelegate == null)) {
                this.onBeginIOS_FMGetFileByParentDelegate = new BeginOperationDelegate(this.OnBeginIOS_FMGetFileByParent);
            }
            if ((this.onEndIOS_FMGetFileByParentDelegate == null)) {
                this.onEndIOS_FMGetFileByParentDelegate = new EndOperationDelegate(this.OnEndIOS_FMGetFileByParent);
            }
            if ((this.onIOS_FMGetFileByParentCompletedDelegate == null)) {
                this.onIOS_FMGetFileByParentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIOS_FMGetFileByParentCompleted);
            }
            base.InvokeAsync(this.onBeginIOS_FMGetFileByParentDelegate, new object[] {
                        jsonData}, this.onEndIOS_FMGetFileByParentDelegate, this.onIOS_FMGetFileByParentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginIOS_VSGetPudversions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIOS_VSGetPudversions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GetWebXML.ServiceReference1.Service1Soap.EndIOS_VSGetPudversions(System.IAsyncResult result) {
            return base.Channel.EndIOS_VSGetPudversions(result);
        }
        
        private System.IAsyncResult OnBeginIOS_VSGetPudversions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginIOS_VSGetPudversions(callback, asyncState);
        }
        
        private object[] OnEndIOS_VSGetPudversions(System.IAsyncResult result) {
            string retVal = ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndIOS_VSGetPudversions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIOS_VSGetPudversionsCompleted(object state) {
            if ((this.IOS_VSGetPudversionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IOS_VSGetPudversionsCompleted(this, new IOS_VSGetPudversionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IOS_VSGetPudversionsAsync() {
            this.IOS_VSGetPudversionsAsync(null);
        }
        
        public void IOS_VSGetPudversionsAsync(object userState) {
            if ((this.onBeginIOS_VSGetPudversionsDelegate == null)) {
                this.onBeginIOS_VSGetPudversionsDelegate = new BeginOperationDelegate(this.OnBeginIOS_VSGetPudversions);
            }
            if ((this.onEndIOS_VSGetPudversionsDelegate == null)) {
                this.onEndIOS_VSGetPudversionsDelegate = new EndOperationDelegate(this.OnEndIOS_VSGetPudversions);
            }
            if ((this.onIOS_VSGetPudversionsCompletedDelegate == null)) {
                this.onIOS_VSGetPudversionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIOS_VSGetPudversionsCompleted);
            }
            base.InvokeAsync(this.onBeginIOS_VSGetPudversionsDelegate, null, this.onEndIOS_VSGetPudversionsDelegate, this.onIOS_VSGetPudversionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVerifyLicense(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerifyLicense(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVerifyLicense(System.IAsyncResult result) {
            base.Channel.EndVerifyLicense(result);
        }
        
        private System.IAsyncResult OnBeginVerifyLicense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVerifyLicense(callback, asyncState);
        }
        
        private object[] OnEndVerifyLicense(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVerifyLicense(result);
            return null;
        }
        
        private void OnVerifyLicenseCompleted(object state) {
            if ((this.VerifyLicenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerifyLicenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerifyLicenseAsync() {
            this.VerifyLicenseAsync(null);
        }
        
        public void VerifyLicenseAsync(object userState) {
            if ((this.onBeginVerifyLicenseDelegate == null)) {
                this.onBeginVerifyLicenseDelegate = new BeginOperationDelegate(this.OnBeginVerifyLicense);
            }
            if ((this.onEndVerifyLicenseDelegate == null)) {
                this.onEndVerifyLicenseDelegate = new EndOperationDelegate(this.OnEndVerifyLicense);
            }
            if ((this.onVerifyLicenseCompletedDelegate == null)) {
                this.onVerifyLicenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerifyLicenseCompleted);
            }
            base.InvokeAsync(this.onBeginVerifyLicenseDelegate, null, this.onEndVerifyLicenseDelegate, this.onVerifyLicenseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTQueryScMethod(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTQueryScMethod(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTQueryScMethod(System.IAsyncResult result) {
            base.Channel.EndVTQueryScMethod(result);
        }
        
        private System.IAsyncResult OnBeginVTQueryScMethod(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTQueryScMethod(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVTQueryScMethod(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTQueryScMethod(result);
            return null;
        }
        
        private void OnVTQueryScMethodCompleted(object state) {
            if ((this.VTQueryScMethodCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTQueryScMethodCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTQueryScMethodAsync(string jsonData) {
            this.VTQueryScMethodAsync(jsonData, null);
        }
        
        public void VTQueryScMethodAsync(string jsonData, object userState) {
            if ((this.onBeginVTQueryScMethodDelegate == null)) {
                this.onBeginVTQueryScMethodDelegate = new BeginOperationDelegate(this.OnBeginVTQueryScMethod);
            }
            if ((this.onEndVTQueryScMethodDelegate == null)) {
                this.onEndVTQueryScMethodDelegate = new EndOperationDelegate(this.OnEndVTQueryScMethod);
            }
            if ((this.onVTQueryScMethodCompletedDelegate == null)) {
                this.onVTQueryScMethodCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTQueryScMethodCompleted);
            }
            base.InvokeAsync(this.onBeginVTQueryScMethodDelegate, new object[] {
                        jsonData}, this.onEndVTQueryScMethodDelegate, this.onVTQueryScMethodCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTAllEntitys(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTAllEntitys(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTAllEntitys(System.IAsyncResult result) {
            base.Channel.EndVTAllEntitys(result);
        }
        
        private System.IAsyncResult OnBeginVTAllEntitys(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTAllEntitys(callback, asyncState);
        }
        
        private object[] OnEndVTAllEntitys(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTAllEntitys(result);
            return null;
        }
        
        private void OnVTAllEntitysCompleted(object state) {
            if ((this.VTAllEntitysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTAllEntitysCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTAllEntitysAsync() {
            this.VTAllEntitysAsync(null);
        }
        
        public void VTAllEntitysAsync(object userState) {
            if ((this.onBeginVTAllEntitysDelegate == null)) {
                this.onBeginVTAllEntitysDelegate = new BeginOperationDelegate(this.OnBeginVTAllEntitys);
            }
            if ((this.onEndVTAllEntitysDelegate == null)) {
                this.onEndVTAllEntitysDelegate = new EndOperationDelegate(this.OnEndVTAllEntitys);
            }
            if ((this.onVTAllEntitysCompletedDelegate == null)) {
                this.onVTAllEntitysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTAllEntitysCompleted);
            }
            base.InvokeAsync(this.onBeginVTAllEntitysDelegate, null, this.onEndVTAllEntitysDelegate, this.onVTAllEntitysCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDSExcelGetAll(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDSExcelGetAll(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDSExcelGetAll(System.IAsyncResult result) {
            base.Channel.EndDSExcelGetAll(result);
        }
        
        private System.IAsyncResult OnBeginDSExcelGetAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDSExcelGetAll(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDSExcelGetAll(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDSExcelGetAll(result);
            return null;
        }
        
        private void OnDSExcelGetAllCompleted(object state) {
            if ((this.DSExcelGetAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DSExcelGetAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DSExcelGetAllAsync(string jsonData) {
            this.DSExcelGetAllAsync(jsonData, null);
        }
        
        public void DSExcelGetAllAsync(string jsonData, object userState) {
            if ((this.onBeginDSExcelGetAllDelegate == null)) {
                this.onBeginDSExcelGetAllDelegate = new BeginOperationDelegate(this.OnBeginDSExcelGetAll);
            }
            if ((this.onEndDSExcelGetAllDelegate == null)) {
                this.onEndDSExcelGetAllDelegate = new EndOperationDelegate(this.OnEndDSExcelGetAll);
            }
            if ((this.onDSExcelGetAllCompletedDelegate == null)) {
                this.onDSExcelGetAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDSExcelGetAllCompleted);
            }
            base.InvokeAsync(this.onBeginDSExcelGetAllDelegate, new object[] {
                        jsonData}, this.onEndDSExcelGetAllDelegate, this.onDSExcelGetAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDSExcelGetSheetName(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDSExcelGetSheetName(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDSExcelGetSheetName(System.IAsyncResult result) {
            base.Channel.EndDSExcelGetSheetName(result);
        }
        
        private System.IAsyncResult OnBeginDSExcelGetSheetName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDSExcelGetSheetName(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDSExcelGetSheetName(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDSExcelGetSheetName(result);
            return null;
        }
        
        private void OnDSExcelGetSheetNameCompleted(object state) {
            if ((this.DSExcelGetSheetNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DSExcelGetSheetNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DSExcelGetSheetNameAsync(string jsonData) {
            this.DSExcelGetSheetNameAsync(jsonData, null);
        }
        
        public void DSExcelGetSheetNameAsync(string jsonData, object userState) {
            if ((this.onBeginDSExcelGetSheetNameDelegate == null)) {
                this.onBeginDSExcelGetSheetNameDelegate = new BeginOperationDelegate(this.OnBeginDSExcelGetSheetName);
            }
            if ((this.onEndDSExcelGetSheetNameDelegate == null)) {
                this.onEndDSExcelGetSheetNameDelegate = new EndOperationDelegate(this.OnEndDSExcelGetSheetName);
            }
            if ((this.onDSExcelGetSheetNameCompletedDelegate == null)) {
                this.onDSExcelGetSheetNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDSExcelGetSheetNameCompleted);
            }
            base.InvokeAsync(this.onBeginDSExcelGetSheetNameDelegate, new object[] {
                        jsonData}, this.onEndDSExcelGetSheetNameDelegate, this.onDSExcelGetSheetNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDSExcelTest(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDSExcelTest(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDSExcelTest(System.IAsyncResult result) {
            base.Channel.EndDSExcelTest(result);
        }
        
        private System.IAsyncResult OnBeginDSExcelTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDSExcelTest(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDSExcelTest(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDSExcelTest(result);
            return null;
        }
        
        private void OnDSExcelTestCompleted(object state) {
            if ((this.DSExcelTestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DSExcelTestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DSExcelTestAsync(string jsonData) {
            this.DSExcelTestAsync(jsonData, null);
        }
        
        public void DSExcelTestAsync(string jsonData, object userState) {
            if ((this.onBeginDSExcelTestDelegate == null)) {
                this.onBeginDSExcelTestDelegate = new BeginOperationDelegate(this.OnBeginDSExcelTest);
            }
            if ((this.onEndDSExcelTestDelegate == null)) {
                this.onEndDSExcelTestDelegate = new EndOperationDelegate(this.OnEndDSExcelTest);
            }
            if ((this.onDSExcelTestCompletedDelegate == null)) {
                this.onDSExcelTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDSExcelTestCompleted);
            }
            base.InvokeAsync(this.onBeginDSExcelTestDelegate, new object[] {
                        jsonData}, this.onEndDSExcelTestDelegate, this.onDSExcelTestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginGetImageList(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetImageList(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndGetImageList(System.IAsyncResult result) {
            base.Channel.EndGetImageList(result);
        }
        
        private System.IAsyncResult OnBeginGetImageList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginGetImageList(jsonData, callback, asyncState);
        }
        
        private object[] OnEndGetImageList(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndGetImageList(result);
            return null;
        }
        
        private void OnGetImageListCompleted(object state) {
            if ((this.GetImageListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetImageListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetImageListAsync(string jsonData) {
            this.GetImageListAsync(jsonData, null);
        }
        
        public void GetImageListAsync(string jsonData, object userState) {
            if ((this.onBeginGetImageListDelegate == null)) {
                this.onBeginGetImageListDelegate = new BeginOperationDelegate(this.OnBeginGetImageList);
            }
            if ((this.onEndGetImageListDelegate == null)) {
                this.onEndGetImageListDelegate = new EndOperationDelegate(this.OnEndGetImageList);
            }
            if ((this.onGetImageListCompletedDelegate == null)) {
                this.onGetImageListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetImageListCompleted);
            }
            base.InvokeAsync(this.onBeginGetImageListDelegate, new object[] {
                        jsonData}, this.onEndGetImageListDelegate, this.onGetImageListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginImageReName(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImageReName(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndImageReName(System.IAsyncResult result) {
            base.Channel.EndImageReName(result);
        }
        
        private System.IAsyncResult OnBeginImageReName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginImageReName(jsonData, callback, asyncState);
        }
        
        private object[] OnEndImageReName(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndImageReName(result);
            return null;
        }
        
        private void OnImageReNameCompleted(object state) {
            if ((this.ImageReNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImageReNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImageReNameAsync(string jsonData) {
            this.ImageReNameAsync(jsonData, null);
        }
        
        public void ImageReNameAsync(string jsonData, object userState) {
            if ((this.onBeginImageReNameDelegate == null)) {
                this.onBeginImageReNameDelegate = new BeginOperationDelegate(this.OnBeginImageReName);
            }
            if ((this.onEndImageReNameDelegate == null)) {
                this.onEndImageReNameDelegate = new EndOperationDelegate(this.OnEndImageReName);
            }
            if ((this.onImageReNameCompletedDelegate == null)) {
                this.onImageReNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImageReNameCompleted);
            }
            base.InvokeAsync(this.onBeginImageReNameDelegate, new object[] {
                        jsonData}, this.onEndImageReNameDelegate, this.onImageReNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginImageDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImageDelete(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndImageDelete(System.IAsyncResult result) {
            base.Channel.EndImageDelete(result);
        }
        
        private System.IAsyncResult OnBeginImageDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginImageDelete(jsonData, callback, asyncState);
        }
        
        private object[] OnEndImageDelete(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndImageDelete(result);
            return null;
        }
        
        private void OnImageDeleteCompleted(object state) {
            if ((this.ImageDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImageDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImageDeleteAsync(string jsonData) {
            this.ImageDeleteAsync(jsonData, null);
        }
        
        public void ImageDeleteAsync(string jsonData, object userState) {
            if ((this.onBeginImageDeleteDelegate == null)) {
                this.onBeginImageDeleteDelegate = new BeginOperationDelegate(this.OnBeginImageDelete);
            }
            if ((this.onEndImageDeleteDelegate == null)) {
                this.onEndImageDeleteDelegate = new EndOperationDelegate(this.OnEndImageDelete);
            }
            if ((this.onImageDeleteCompletedDelegate == null)) {
                this.onImageDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImageDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginImageDeleteDelegate, new object[] {
                        jsonData}, this.onEndImageDeleteDelegate, this.onImageDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginReadConfigXmlList(string path, string extensionName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReadConfigXmlList(path, extensionName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GetWebXML.ServiceReference1.Service1Soap.EndReadConfigXmlList(System.IAsyncResult result) {
            return base.Channel.EndReadConfigXmlList(result);
        }
        
        private System.IAsyncResult OnBeginReadConfigXmlList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string path = ((string)(inValues[0]));
            string extensionName = ((string)(inValues[1]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginReadConfigXmlList(path, extensionName, callback, asyncState);
        }
        
        private object[] OnEndReadConfigXmlList(System.IAsyncResult result) {
            string retVal = ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndReadConfigXmlList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReadConfigXmlListCompleted(object state) {
            if ((this.ReadConfigXmlListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReadConfigXmlListCompleted(this, new ReadConfigXmlListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReadConfigXmlListAsync(string path, string extensionName) {
            this.ReadConfigXmlListAsync(path, extensionName, null);
        }
        
        public void ReadConfigXmlListAsync(string path, string extensionName, object userState) {
            if ((this.onBeginReadConfigXmlListDelegate == null)) {
                this.onBeginReadConfigXmlListDelegate = new BeginOperationDelegate(this.OnBeginReadConfigXmlList);
            }
            if ((this.onEndReadConfigXmlListDelegate == null)) {
                this.onEndReadConfigXmlListDelegate = new EndOperationDelegate(this.OnEndReadConfigXmlList);
            }
            if ((this.onReadConfigXmlListCompletedDelegate == null)) {
                this.onReadConfigXmlListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReadConfigXmlListCompleted);
            }
            base.InvokeAsync(this.onBeginReadConfigXmlListDelegate, new object[] {
                        path,
                        extensionName}, this.onEndReadConfigXmlListDelegate, this.onReadConfigXmlListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginSaveScMethodInfoTest(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveScMethodInfoTest(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GetWebXML.ServiceReference1.Service1Soap.EndSaveScMethodInfoTest(System.IAsyncResult result) {
            return base.Channel.EndSaveScMethodInfoTest(result);
        }
        
        private System.IAsyncResult OnBeginSaveScMethodInfoTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginSaveScMethodInfoTest(callback, asyncState);
        }
        
        private object[] OnEndSaveScMethodInfoTest(System.IAsyncResult result) {
            bool retVal = ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndSaveScMethodInfoTest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveScMethodInfoTestCompleted(object state) {
            if ((this.SaveScMethodInfoTestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveScMethodInfoTestCompleted(this, new SaveScMethodInfoTestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveScMethodInfoTestAsync() {
            this.SaveScMethodInfoTestAsync(null);
        }
        
        public void SaveScMethodInfoTestAsync(object userState) {
            if ((this.onBeginSaveScMethodInfoTestDelegate == null)) {
                this.onBeginSaveScMethodInfoTestDelegate = new BeginOperationDelegate(this.OnBeginSaveScMethodInfoTest);
            }
            if ((this.onEndSaveScMethodInfoTestDelegate == null)) {
                this.onEndSaveScMethodInfoTestDelegate = new EndOperationDelegate(this.OnEndSaveScMethodInfoTest);
            }
            if ((this.onSaveScMethodInfoTestCompletedDelegate == null)) {
                this.onSaveScMethodInfoTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveScMethodInfoTestCompleted);
            }
            base.InvokeAsync(this.onBeginSaveScMethodInfoTestDelegate, null, this.onEndSaveScMethodInfoTestDelegate, this.onSaveScMethodInfoTestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDCSave(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDCSave(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDCSave(System.IAsyncResult result) {
            base.Channel.EndDCSave(result);
        }
        
        private System.IAsyncResult OnBeginDCSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDCSave(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDCSave(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDCSave(result);
            return null;
        }
        
        private void OnDCSaveCompleted(object state) {
            if ((this.DCSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DCSaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DCSaveAsync(string jsonData) {
            this.DCSaveAsync(jsonData, null);
        }
        
        public void DCSaveAsync(string jsonData, object userState) {
            if ((this.onBeginDCSaveDelegate == null)) {
                this.onBeginDCSaveDelegate = new BeginOperationDelegate(this.OnBeginDCSave);
            }
            if ((this.onEndDCSaveDelegate == null)) {
                this.onEndDCSaveDelegate = new EndOperationDelegate(this.OnEndDCSave);
            }
            if ((this.onDCSaveCompletedDelegate == null)) {
                this.onDCSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDCSaveCompleted);
            }
            base.InvokeAsync(this.onBeginDCSaveDelegate, new object[] {
                        jsonData}, this.onEndDCSaveDelegate, this.onDCSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDCDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDCDelete(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDCDelete(System.IAsyncResult result) {
            base.Channel.EndDCDelete(result);
        }
        
        private System.IAsyncResult OnBeginDCDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDCDelete(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDCDelete(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDCDelete(result);
            return null;
        }
        
        private void OnDCDeleteCompleted(object state) {
            if ((this.DCDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DCDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DCDeleteAsync(string jsonData) {
            this.DCDeleteAsync(jsonData, null);
        }
        
        public void DCDeleteAsync(string jsonData, object userState) {
            if ((this.onBeginDCDeleteDelegate == null)) {
                this.onBeginDCDeleteDelegate = new BeginOperationDelegate(this.OnBeginDCDelete);
            }
            if ((this.onEndDCDeleteDelegate == null)) {
                this.onEndDCDeleteDelegate = new EndOperationDelegate(this.OnEndDCDelete);
            }
            if ((this.onDCDeleteCompletedDelegate == null)) {
                this.onDCDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDCDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDCDeleteDelegate, new object[] {
                        jsonData}, this.onEndDCDeleteDelegate, this.onDCDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDCTest(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDCTest(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDCTest(System.IAsyncResult result) {
            base.Channel.EndDCTest(result);
        }
        
        private System.IAsyncResult OnBeginDCTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDCTest(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDCTest(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDCTest(result);
            return null;
        }
        
        private void OnDCTestCompleted(object state) {
            if ((this.DCTestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DCTestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DCTestAsync(string jsonData) {
            this.DCTestAsync(jsonData, null);
        }
        
        public void DCTestAsync(string jsonData, object userState) {
            if ((this.onBeginDCTestDelegate == null)) {
                this.onBeginDCTestDelegate = new BeginOperationDelegate(this.OnBeginDCTest);
            }
            if ((this.onEndDCTestDelegate == null)) {
                this.onEndDCTestDelegate = new EndOperationDelegate(this.OnEndDCTest);
            }
            if ((this.onDCTestCompletedDelegate == null)) {
                this.onDCTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDCTestCompleted);
            }
            base.InvokeAsync(this.onBeginDCTestDelegate, new object[] {
                        jsonData}, this.onEndDCTestDelegate, this.onDCTestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDCGetAllConn(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDCGetAllConn(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDCGetAllConn(System.IAsyncResult result) {
            base.Channel.EndDCGetAllConn(result);
        }
        
        private System.IAsyncResult OnBeginDCGetAllConn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDCGetAllConn(callback, asyncState);
        }
        
        private object[] OnEndDCGetAllConn(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDCGetAllConn(result);
            return null;
        }
        
        private void OnDCGetAllConnCompleted(object state) {
            if ((this.DCGetAllConnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DCGetAllConnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DCGetAllConnAsync() {
            this.DCGetAllConnAsync(null);
        }
        
        public void DCGetAllConnAsync(object userState) {
            if ((this.onBeginDCGetAllConnDelegate == null)) {
                this.onBeginDCGetAllConnDelegate = new BeginOperationDelegate(this.OnBeginDCGetAllConn);
            }
            if ((this.onEndDCGetAllConnDelegate == null)) {
                this.onEndDCGetAllConnDelegate = new EndOperationDelegate(this.OnEndDCGetAllConn);
            }
            if ((this.onDCGetAllConnCompletedDelegate == null)) {
                this.onDCGetAllConnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDCGetAllConnCompleted);
            }
            base.InvokeAsync(this.onBeginDCGetAllConnDelegate, null, this.onEndDCGetAllConnDelegate, this.onDCGetAllConnCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDCGetNamesByID(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDCGetNamesByID(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDCGetNamesByID(System.IAsyncResult result) {
            base.Channel.EndDCGetNamesByID(result);
        }
        
        private System.IAsyncResult OnBeginDCGetNamesByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDCGetNamesByID(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDCGetNamesByID(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDCGetNamesByID(result);
            return null;
        }
        
        private void OnDCGetNamesByIDCompleted(object state) {
            if ((this.DCGetNamesByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DCGetNamesByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DCGetNamesByIDAsync(string jsonData) {
            this.DCGetNamesByIDAsync(jsonData, null);
        }
        
        public void DCGetNamesByIDAsync(string jsonData, object userState) {
            if ((this.onBeginDCGetNamesByIDDelegate == null)) {
                this.onBeginDCGetNamesByIDDelegate = new BeginOperationDelegate(this.OnBeginDCGetNamesByID);
            }
            if ((this.onEndDCGetNamesByIDDelegate == null)) {
                this.onEndDCGetNamesByIDDelegate = new EndOperationDelegate(this.OnEndDCGetNamesByID);
            }
            if ((this.onDCGetNamesByIDCompletedDelegate == null)) {
                this.onDCGetNamesByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDCGetNamesByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDCGetNamesByIDDelegate, new object[] {
                        jsonData}, this.onEndDCGetNamesByIDDelegate, this.onDCGetNamesByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDCGetColumnsByID(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDCGetColumnsByID(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDCGetColumnsByID(System.IAsyncResult result) {
            base.Channel.EndDCGetColumnsByID(result);
        }
        
        private System.IAsyncResult OnBeginDCGetColumnsByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDCGetColumnsByID(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDCGetColumnsByID(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDCGetColumnsByID(result);
            return null;
        }
        
        private void OnDCGetColumnsByIDCompleted(object state) {
            if ((this.DCGetColumnsByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DCGetColumnsByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DCGetColumnsByIDAsync(string jsonData) {
            this.DCGetColumnsByIDAsync(jsonData, null);
        }
        
        public void DCGetColumnsByIDAsync(string jsonData, object userState) {
            if ((this.onBeginDCGetColumnsByIDDelegate == null)) {
                this.onBeginDCGetColumnsByIDDelegate = new BeginOperationDelegate(this.OnBeginDCGetColumnsByID);
            }
            if ((this.onEndDCGetColumnsByIDDelegate == null)) {
                this.onEndDCGetColumnsByIDDelegate = new EndOperationDelegate(this.OnEndDCGetColumnsByID);
            }
            if ((this.onDCGetColumnsByIDCompletedDelegate == null)) {
                this.onDCGetColumnsByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDCGetColumnsByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDCGetColumnsByIDDelegate, new object[] {
                        jsonData}, this.onEndDCGetColumnsByIDDelegate, this.onDCGetColumnsByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDCGetDataByID(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDCGetDataByID(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDCGetDataByID(System.IAsyncResult result) {
            base.Channel.EndDCGetDataByID(result);
        }
        
        private System.IAsyncResult OnBeginDCGetDataByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDCGetDataByID(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDCGetDataByID(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDCGetDataByID(result);
            return null;
        }
        
        private void OnDCGetDataByIDCompleted(object state) {
            if ((this.DCGetDataByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DCGetDataByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DCGetDataByIDAsync(string jsonData) {
            this.DCGetDataByIDAsync(jsonData, null);
        }
        
        public void DCGetDataByIDAsync(string jsonData, object userState) {
            if ((this.onBeginDCGetDataByIDDelegate == null)) {
                this.onBeginDCGetDataByIDDelegate = new BeginOperationDelegate(this.OnBeginDCGetDataByID);
            }
            if ((this.onEndDCGetDataByIDDelegate == null)) {
                this.onEndDCGetDataByIDDelegate = new EndOperationDelegate(this.OnEndDCGetDataByID);
            }
            if ((this.onDCGetDataByIDCompletedDelegate == null)) {
                this.onDCGetDataByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDCGetDataByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDCGetDataByIDDelegate, new object[] {
                        jsonData}, this.onEndDCGetDataByIDDelegate, this.onDCGetDataByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDCGetConnDByID(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDCGetConnDByID(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDCGetConnDByID(System.IAsyncResult result) {
            base.Channel.EndDCGetConnDByID(result);
        }
        
        private System.IAsyncResult OnBeginDCGetConnDByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDCGetConnDByID(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDCGetConnDByID(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDCGetConnDByID(result);
            return null;
        }
        
        private void OnDCGetConnDByIDCompleted(object state) {
            if ((this.DCGetConnDByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DCGetConnDByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DCGetConnDByIDAsync(string jsonData) {
            this.DCGetConnDByIDAsync(jsonData, null);
        }
        
        public void DCGetConnDByIDAsync(string jsonData, object userState) {
            if ((this.onBeginDCGetConnDByIDDelegate == null)) {
                this.onBeginDCGetConnDByIDDelegate = new BeginOperationDelegate(this.OnBeginDCGetConnDByID);
            }
            if ((this.onEndDCGetConnDByIDDelegate == null)) {
                this.onEndDCGetConnDByIDDelegate = new EndOperationDelegate(this.OnEndDCGetConnDByID);
            }
            if ((this.onDCGetConnDByIDCompletedDelegate == null)) {
                this.onDCGetConnDByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDCGetConnDByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDCGetConnDByIDDelegate, new object[] {
                        jsonData}, this.onEndDCGetConnDByIDDelegate, this.onDCGetConnDByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTColumInfos(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTColumInfos(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTColumInfos(System.IAsyncResult result) {
            base.Channel.EndVTColumInfos(result);
        }
        
        private System.IAsyncResult OnBeginVTColumInfos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTColumInfos(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVTColumInfos(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTColumInfos(result);
            return null;
        }
        
        private void OnVTColumInfosCompleted(object state) {
            if ((this.VTColumInfosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTColumInfosCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTColumInfosAsync(string jsonData) {
            this.VTColumInfosAsync(jsonData, null);
        }
        
        public void VTColumInfosAsync(string jsonData, object userState) {
            if ((this.onBeginVTColumInfosDelegate == null)) {
                this.onBeginVTColumInfosDelegate = new BeginOperationDelegate(this.OnBeginVTColumInfos);
            }
            if ((this.onEndVTColumInfosDelegate == null)) {
                this.onEndVTColumInfosDelegate = new EndOperationDelegate(this.OnEndVTColumInfos);
            }
            if ((this.onVTColumInfosCompletedDelegate == null)) {
                this.onVTColumInfosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTColumInfosCompleted);
            }
            base.InvokeAsync(this.onBeginVTColumInfosDelegate, new object[] {
                        jsonData}, this.onEndVTColumInfosDelegate, this.onVTColumInfosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTSave(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTSave(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTSave(System.IAsyncResult result) {
            base.Channel.EndVTSave(result);
        }
        
        private System.IAsyncResult OnBeginVTSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTSave(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVTSave(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTSave(result);
            return null;
        }
        
        private void OnVTSaveCompleted(object state) {
            if ((this.VTSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTSaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTSaveAsync(string jsonData) {
            this.VTSaveAsync(jsonData, null);
        }
        
        public void VTSaveAsync(string jsonData, object userState) {
            if ((this.onBeginVTSaveDelegate == null)) {
                this.onBeginVTSaveDelegate = new BeginOperationDelegate(this.OnBeginVTSave);
            }
            if ((this.onEndVTSaveDelegate == null)) {
                this.onEndVTSaveDelegate = new EndOperationDelegate(this.OnEndVTSave);
            }
            if ((this.onVTSaveCompletedDelegate == null)) {
                this.onVTSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTSaveCompleted);
            }
            base.InvokeAsync(this.onBeginVTSaveDelegate, new object[] {
                        jsonData}, this.onEndVTSaveDelegate, this.onVTSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTDelete(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTDelete(System.IAsyncResult result) {
            base.Channel.EndVTDelete(result);
        }
        
        private System.IAsyncResult OnBeginVTDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTDelete(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVTDelete(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTDelete(result);
            return null;
        }
        
        private void OnVTDeleteCompleted(object state) {
            if ((this.VTDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTDeleteAsync(string jsonData) {
            this.VTDeleteAsync(jsonData, null);
        }
        
        public void VTDeleteAsync(string jsonData, object userState) {
            if ((this.onBeginVTDeleteDelegate == null)) {
                this.onBeginVTDeleteDelegate = new BeginOperationDelegate(this.OnBeginVTDelete);
            }
            if ((this.onEndVTDeleteDelegate == null)) {
                this.onEndVTDeleteDelegate = new EndOperationDelegate(this.OnEndVTDelete);
            }
            if ((this.onVTDeleteCompletedDelegate == null)) {
                this.onVTDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginVTDeleteDelegate, new object[] {
                        jsonData}, this.onEndVTDeleteDelegate, this.onVTDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTGetVirtualTableByDS(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTGetVirtualTableByDS(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTGetVirtualTableByDS(System.IAsyncResult result) {
            base.Channel.EndVTGetVirtualTableByDS(result);
        }
        
        private System.IAsyncResult OnBeginVTGetVirtualTableByDS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTGetVirtualTableByDS(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVTGetVirtualTableByDS(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTGetVirtualTableByDS(result);
            return null;
        }
        
        private void OnVTGetVirtualTableByDSCompleted(object state) {
            if ((this.VTGetVirtualTableByDSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTGetVirtualTableByDSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTGetVirtualTableByDSAsync(string jsonData) {
            this.VTGetVirtualTableByDSAsync(jsonData, null);
        }
        
        public void VTGetVirtualTableByDSAsync(string jsonData, object userState) {
            if ((this.onBeginVTGetVirtualTableByDSDelegate == null)) {
                this.onBeginVTGetVirtualTableByDSDelegate = new BeginOperationDelegate(this.OnBeginVTGetVirtualTableByDS);
            }
            if ((this.onEndVTGetVirtualTableByDSDelegate == null)) {
                this.onEndVTGetVirtualTableByDSDelegate = new EndOperationDelegate(this.OnEndVTGetVirtualTableByDS);
            }
            if ((this.onVTGetVirtualTableByDSCompletedDelegate == null)) {
                this.onVTGetVirtualTableByDSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTGetVirtualTableByDSCompleted);
            }
            base.InvokeAsync(this.onBeginVTGetVirtualTableByDSDelegate, new object[] {
                        jsonData}, this.onEndVTGetVirtualTableByDSDelegate, this.onVTGetVirtualTableByDSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTGetDataBySql(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTGetDataBySql(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTGetDataBySql(System.IAsyncResult result) {
            base.Channel.EndVTGetDataBySql(result);
        }
        
        private System.IAsyncResult OnBeginVTGetDataBySql(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTGetDataBySql(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVTGetDataBySql(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTGetDataBySql(result);
            return null;
        }
        
        private void OnVTGetDataBySqlCompleted(object state) {
            if ((this.VTGetDataBySqlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTGetDataBySqlCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTGetDataBySqlAsync(string jsonData) {
            this.VTGetDataBySqlAsync(jsonData, null);
        }
        
        public void VTGetDataBySqlAsync(string jsonData, object userState) {
            if ((this.onBeginVTGetDataBySqlDelegate == null)) {
                this.onBeginVTGetDataBySqlDelegate = new BeginOperationDelegate(this.OnBeginVTGetDataBySql);
            }
            if ((this.onEndVTGetDataBySqlDelegate == null)) {
                this.onEndVTGetDataBySqlDelegate = new EndOperationDelegate(this.OnEndVTGetDataBySql);
            }
            if ((this.onVTGetDataBySqlCompletedDelegate == null)) {
                this.onVTGetDataBySqlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTGetDataBySqlCompleted);
            }
            base.InvokeAsync(this.onBeginVTGetDataBySqlDelegate, new object[] {
                        jsonData}, this.onEndVTGetDataBySqlDelegate, this.onVTGetDataBySqlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTGetTableDetailsByDS(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTGetTableDetailsByDS(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTGetTableDetailsByDS(System.IAsyncResult result) {
            base.Channel.EndVTGetTableDetailsByDS(result);
        }
        
        private System.IAsyncResult OnBeginVTGetTableDetailsByDS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTGetTableDetailsByDS(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVTGetTableDetailsByDS(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTGetTableDetailsByDS(result);
            return null;
        }
        
        private void OnVTGetTableDetailsByDSCompleted(object state) {
            if ((this.VTGetTableDetailsByDSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTGetTableDetailsByDSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTGetTableDetailsByDSAsync(string jsonData) {
            this.VTGetTableDetailsByDSAsync(jsonData, null);
        }
        
        public void VTGetTableDetailsByDSAsync(string jsonData, object userState) {
            if ((this.onBeginVTGetTableDetailsByDSDelegate == null)) {
                this.onBeginVTGetTableDetailsByDSDelegate = new BeginOperationDelegate(this.OnBeginVTGetTableDetailsByDS);
            }
            if ((this.onEndVTGetTableDetailsByDSDelegate == null)) {
                this.onEndVTGetTableDetailsByDSDelegate = new EndOperationDelegate(this.OnEndVTGetTableDetailsByDS);
            }
            if ((this.onVTGetTableDetailsByDSCompletedDelegate == null)) {
                this.onVTGetTableDetailsByDSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTGetTableDetailsByDSCompleted);
            }
            base.InvokeAsync(this.onBeginVTGetTableDetailsByDSDelegate, new object[] {
                        jsonData}, this.onEndVTGetTableDetailsByDSDelegate, this.onVTGetTableDetailsByDSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDSSave(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDSSave(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDSSave(System.IAsyncResult result) {
            base.Channel.EndDSSave(result);
        }
        
        private System.IAsyncResult OnBeginDSSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDSSave(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDSSave(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDSSave(result);
            return null;
        }
        
        private void OnDSSaveCompleted(object state) {
            if ((this.DSSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DSSaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DSSaveAsync(string jsonData) {
            this.DSSaveAsync(jsonData, null);
        }
        
        public void DSSaveAsync(string jsonData, object userState) {
            if ((this.onBeginDSSaveDelegate == null)) {
                this.onBeginDSSaveDelegate = new BeginOperationDelegate(this.OnBeginDSSave);
            }
            if ((this.onEndDSSaveDelegate == null)) {
                this.onEndDSSaveDelegate = new EndOperationDelegate(this.OnEndDSSave);
            }
            if ((this.onDSSaveCompletedDelegate == null)) {
                this.onDSSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDSSaveCompleted);
            }
            base.InvokeAsync(this.onBeginDSSaveDelegate, new object[] {
                        jsonData}, this.onEndDSSaveDelegate, this.onDSSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDSDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDSDelete(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDSDelete(System.IAsyncResult result) {
            base.Channel.EndDSDelete(result);
        }
        
        private System.IAsyncResult OnBeginDSDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDSDelete(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDSDelete(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDSDelete(result);
            return null;
        }
        
        private void OnDSDeleteCompleted(object state) {
            if ((this.DSDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DSDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DSDeleteAsync(string jsonData) {
            this.DSDeleteAsync(jsonData, null);
        }
        
        public void DSDeleteAsync(string jsonData, object userState) {
            if ((this.onBeginDSDeleteDelegate == null)) {
                this.onBeginDSDeleteDelegate = new BeginOperationDelegate(this.OnBeginDSDelete);
            }
            if ((this.onEndDSDeleteDelegate == null)) {
                this.onEndDSDeleteDelegate = new EndOperationDelegate(this.OnEndDSDelete);
            }
            if ((this.onDSDeleteCompletedDelegate == null)) {
                this.onDSDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDSDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDSDeleteDelegate, new object[] {
                        jsonData}, this.onEndDSDeleteDelegate, this.onDSDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDSAllDataSet(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDSAllDataSet(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDSAllDataSet(System.IAsyncResult result) {
            base.Channel.EndDSAllDataSet(result);
        }
        
        private System.IAsyncResult OnBeginDSAllDataSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDSAllDataSet(callback, asyncState);
        }
        
        private object[] OnEndDSAllDataSet(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDSAllDataSet(result);
            return null;
        }
        
        private void OnDSAllDataSetCompleted(object state) {
            if ((this.DSAllDataSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DSAllDataSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DSAllDataSetAsync() {
            this.DSAllDataSetAsync(null);
        }
        
        public void DSAllDataSetAsync(object userState) {
            if ((this.onBeginDSAllDataSetDelegate == null)) {
                this.onBeginDSAllDataSetDelegate = new BeginOperationDelegate(this.OnBeginDSAllDataSet);
            }
            if ((this.onEndDSAllDataSetDelegate == null)) {
                this.onEndDSAllDataSetDelegate = new EndOperationDelegate(this.OnEndDSAllDataSet);
            }
            if ((this.onDSAllDataSetCompletedDelegate == null)) {
                this.onDSAllDataSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDSAllDataSetCompleted);
            }
            base.InvokeAsync(this.onBeginDSAllDataSetDelegate, null, this.onEndDSAllDataSetDelegate, this.onDSAllDataSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDSDataSetByID(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDSDataSetByID(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDSDataSetByID(System.IAsyncResult result) {
            base.Channel.EndDSDataSetByID(result);
        }
        
        private System.IAsyncResult OnBeginDSDataSetByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDSDataSetByID(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDSDataSetByID(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDSDataSetByID(result);
            return null;
        }
        
        private void OnDSDataSetByIDCompleted(object state) {
            if ((this.DSDataSetByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DSDataSetByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DSDataSetByIDAsync(string jsonData) {
            this.DSDataSetByIDAsync(jsonData, null);
        }
        
        public void DSDataSetByIDAsync(string jsonData, object userState) {
            if ((this.onBeginDSDataSetByIDDelegate == null)) {
                this.onBeginDSDataSetByIDDelegate = new BeginOperationDelegate(this.OnBeginDSDataSetByID);
            }
            if ((this.onEndDSDataSetByIDDelegate == null)) {
                this.onEndDSDataSetByIDDelegate = new EndOperationDelegate(this.OnEndDSDataSetByID);
            }
            if ((this.onDSDataSetByIDCompletedDelegate == null)) {
                this.onDSDataSetByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDSDataSetByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDSDataSetByIDDelegate, new object[] {
                        jsonData}, this.onEndDSDataSetByIDDelegate, this.onDSDataSetByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDSReadData(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDSReadData(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDSReadData(System.IAsyncResult result) {
            base.Channel.EndDSReadData(result);
        }
        
        private System.IAsyncResult OnBeginDSReadData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDSReadData(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDSReadData(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDSReadData(result);
            return null;
        }
        
        private void OnDSReadDataCompleted(object state) {
            if ((this.DSReadDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DSReadDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DSReadDataAsync(string jsonData) {
            this.DSReadDataAsync(jsonData, null);
        }
        
        public void DSReadDataAsync(string jsonData, object userState) {
            if ((this.onBeginDSReadDataDelegate == null)) {
                this.onBeginDSReadDataDelegate = new BeginOperationDelegate(this.OnBeginDSReadData);
            }
            if ((this.onEndDSReadDataDelegate == null)) {
                this.onEndDSReadDataDelegate = new EndOperationDelegate(this.OnEndDSReadData);
            }
            if ((this.onDSReadDataCompletedDelegate == null)) {
                this.onDSReadDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDSReadDataCompleted);
            }
            base.InvokeAsync(this.onBeginDSReadDataDelegate, new object[] {
                        jsonData}, this.onEndDSReadDataDelegate, this.onDSReadDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDSTestData(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDSTestData(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDSTestData(System.IAsyncResult result) {
            base.Channel.EndDSTestData(result);
        }
        
        private System.IAsyncResult OnBeginDSTestData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDSTestData(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDSTestData(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDSTestData(result);
            return null;
        }
        
        private void OnDSTestDataCompleted(object state) {
            if ((this.DSTestDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DSTestDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DSTestDataAsync(string jsonData) {
            this.DSTestDataAsync(jsonData, null);
        }
        
        public void DSTestDataAsync(string jsonData, object userState) {
            if ((this.onBeginDSTestDataDelegate == null)) {
                this.onBeginDSTestDataDelegate = new BeginOperationDelegate(this.OnBeginDSTestData);
            }
            if ((this.onEndDSTestDataDelegate == null)) {
                this.onEndDSTestDataDelegate = new EndOperationDelegate(this.OnEndDSTestData);
            }
            if ((this.onDSTestDataCompletedDelegate == null)) {
                this.onDSTestDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDSTestDataCompleted);
            }
            base.InvokeAsync(this.onBeginDSTestDataDelegate, new object[] {
                        jsonData}, this.onEndDSTestDataDelegate, this.onDSTestDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDSBAGetAllType(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDSBAGetAllType(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDSBAGetAllType(System.IAsyncResult result) {
            base.Channel.EndDSBAGetAllType(result);
        }
        
        private System.IAsyncResult OnBeginDSBAGetAllType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDSBAGetAllType(callback, asyncState);
        }
        
        private object[] OnEndDSBAGetAllType(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDSBAGetAllType(result);
            return null;
        }
        
        private void OnDSBAGetAllTypeCompleted(object state) {
            if ((this.DSBAGetAllTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DSBAGetAllTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DSBAGetAllTypeAsync() {
            this.DSBAGetAllTypeAsync(null);
        }
        
        public void DSBAGetAllTypeAsync(object userState) {
            if ((this.onBeginDSBAGetAllTypeDelegate == null)) {
                this.onBeginDSBAGetAllTypeDelegate = new BeginOperationDelegate(this.OnBeginDSBAGetAllType);
            }
            if ((this.onEndDSBAGetAllTypeDelegate == null)) {
                this.onEndDSBAGetAllTypeDelegate = new EndOperationDelegate(this.OnEndDSBAGetAllType);
            }
            if ((this.onDSBAGetAllTypeCompletedDelegate == null)) {
                this.onDSBAGetAllTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDSBAGetAllTypeCompleted);
            }
            base.InvokeAsync(this.onBeginDSBAGetAllTypeDelegate, null, this.onEndDSBAGetAllTypeDelegate, this.onDSBAGetAllTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDSBAGetDataByType(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDSBAGetDataByType(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDSBAGetDataByType(System.IAsyncResult result) {
            base.Channel.EndDSBAGetDataByType(result);
        }
        
        private System.IAsyncResult OnBeginDSBAGetDataByType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDSBAGetDataByType(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDSBAGetDataByType(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDSBAGetDataByType(result);
            return null;
        }
        
        private void OnDSBAGetDataByTypeCompleted(object state) {
            if ((this.DSBAGetDataByTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DSBAGetDataByTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DSBAGetDataByTypeAsync(string jsonData) {
            this.DSBAGetDataByTypeAsync(jsonData, null);
        }
        
        public void DSBAGetDataByTypeAsync(string jsonData, object userState) {
            if ((this.onBeginDSBAGetDataByTypeDelegate == null)) {
                this.onBeginDSBAGetDataByTypeDelegate = new BeginOperationDelegate(this.OnBeginDSBAGetDataByType);
            }
            if ((this.onEndDSBAGetDataByTypeDelegate == null)) {
                this.onEndDSBAGetDataByTypeDelegate = new EndOperationDelegate(this.OnEndDSBAGetDataByType);
            }
            if ((this.onDSBAGetDataByTypeCompletedDelegate == null)) {
                this.onDSBAGetDataByTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDSBAGetDataByTypeCompleted);
            }
            base.InvokeAsync(this.onBeginDSBAGetDataByTypeDelegate, new object[] {
                        jsonData}, this.onEndDSBAGetDataByTypeDelegate, this.onDSBAGetDataByTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDSBAGetDataByID(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDSBAGetDataByID(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDSBAGetDataByID(System.IAsyncResult result) {
            base.Channel.EndDSBAGetDataByID(result);
        }
        
        private System.IAsyncResult OnBeginDSBAGetDataByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDSBAGetDataByID(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDSBAGetDataByID(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDSBAGetDataByID(result);
            return null;
        }
        
        private void OnDSBAGetDataByIDCompleted(object state) {
            if ((this.DSBAGetDataByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DSBAGetDataByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DSBAGetDataByIDAsync(string jsonData) {
            this.DSBAGetDataByIDAsync(jsonData, null);
        }
        
        public void DSBAGetDataByIDAsync(string jsonData, object userState) {
            if ((this.onBeginDSBAGetDataByIDDelegate == null)) {
                this.onBeginDSBAGetDataByIDDelegate = new BeginOperationDelegate(this.OnBeginDSBAGetDataByID);
            }
            if ((this.onEndDSBAGetDataByIDDelegate == null)) {
                this.onEndDSBAGetDataByIDDelegate = new EndOperationDelegate(this.OnEndDSBAGetDataByID);
            }
            if ((this.onDSBAGetDataByIDCompletedDelegate == null)) {
                this.onDSBAGetDataByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDSBAGetDataByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDSBAGetDataByIDDelegate, new object[] {
                        jsonData}, this.onEndDSBAGetDataByIDDelegate, this.onDSBAGetDataByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.Begintest00001(System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begintest00001(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.Endtest00001(System.IAsyncResult result) {
            base.Channel.Endtest00001(result);
        }
        
        private System.IAsyncResult OnBegintest00001(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).Begintest00001(callback, asyncState);
        }
        
        private object[] OnEndtest00001(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).Endtest00001(result);
            return null;
        }
        
        private void Ontest00001Completed(object state) {
            if ((this.test00001Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.test00001Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void test00001Async() {
            this.test00001Async(null);
        }
        
        public void test00001Async(object userState) {
            if ((this.onBegintest00001Delegate == null)) {
                this.onBegintest00001Delegate = new BeginOperationDelegate(this.OnBegintest00001);
            }
            if ((this.onEndtest00001Delegate == null)) {
                this.onEndtest00001Delegate = new EndOperationDelegate(this.OnEndtest00001);
            }
            if ((this.ontest00001CompletedDelegate == null)) {
                this.ontest00001CompletedDelegate = new System.Threading.SendOrPostCallback(this.Ontest00001Completed);
            }
            base.InvokeAsync(this.onBegintest00001Delegate, null, this.onEndtest00001Delegate, this.ontest00001CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginFMFolderAdd(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFMFolderAdd(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndFMFolderAdd(System.IAsyncResult result) {
            base.Channel.EndFMFolderAdd(result);
        }
        
        private System.IAsyncResult OnBeginFMFolderAdd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginFMFolderAdd(jsonData, callback, asyncState);
        }
        
        private object[] OnEndFMFolderAdd(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndFMFolderAdd(result);
            return null;
        }
        
        private void OnFMFolderAddCompleted(object state) {
            if ((this.FMFolderAddCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FMFolderAddCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FMFolderAddAsync(string jsonData) {
            this.FMFolderAddAsync(jsonData, null);
        }
        
        public void FMFolderAddAsync(string jsonData, object userState) {
            if ((this.onBeginFMFolderAddDelegate == null)) {
                this.onBeginFMFolderAddDelegate = new BeginOperationDelegate(this.OnBeginFMFolderAdd);
            }
            if ((this.onEndFMFolderAddDelegate == null)) {
                this.onEndFMFolderAddDelegate = new EndOperationDelegate(this.OnEndFMFolderAdd);
            }
            if ((this.onFMFolderAddCompletedDelegate == null)) {
                this.onFMFolderAddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFMFolderAddCompleted);
            }
            base.InvokeAsync(this.onBeginFMFolderAddDelegate, new object[] {
                        jsonData}, this.onEndFMFolderAddDelegate, this.onFMFolderAddCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginFMFolderDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFMFolderDelete(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndFMFolderDelete(System.IAsyncResult result) {
            base.Channel.EndFMFolderDelete(result);
        }
        
        private System.IAsyncResult OnBeginFMFolderDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginFMFolderDelete(jsonData, callback, asyncState);
        }
        
        private object[] OnEndFMFolderDelete(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndFMFolderDelete(result);
            return null;
        }
        
        private void OnFMFolderDeleteCompleted(object state) {
            if ((this.FMFolderDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FMFolderDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FMFolderDeleteAsync(string jsonData) {
            this.FMFolderDeleteAsync(jsonData, null);
        }
        
        public void FMFolderDeleteAsync(string jsonData, object userState) {
            if ((this.onBeginFMFolderDeleteDelegate == null)) {
                this.onBeginFMFolderDeleteDelegate = new BeginOperationDelegate(this.OnBeginFMFolderDelete);
            }
            if ((this.onEndFMFolderDeleteDelegate == null)) {
                this.onEndFMFolderDeleteDelegate = new EndOperationDelegate(this.OnEndFMFolderDelete);
            }
            if ((this.onFMFolderDeleteCompletedDelegate == null)) {
                this.onFMFolderDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFMFolderDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginFMFolderDeleteDelegate, new object[] {
                        jsonData}, this.onEndFMFolderDeleteDelegate, this.onFMFolderDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginFMGetFileByParent(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFMGetFileByParent(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndFMGetFileByParent(System.IAsyncResult result) {
            base.Channel.EndFMGetFileByParent(result);
        }
        
        private System.IAsyncResult OnBeginFMGetFileByParent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginFMGetFileByParent(jsonData, callback, asyncState);
        }
        
        private object[] OnEndFMGetFileByParent(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndFMGetFileByParent(result);
            return null;
        }
        
        private void OnFMGetFileByParentCompleted(object state) {
            if ((this.FMGetFileByParentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FMGetFileByParentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FMGetFileByParentAsync(string jsonData) {
            this.FMGetFileByParentAsync(jsonData, null);
        }
        
        public void FMGetFileByParentAsync(string jsonData, object userState) {
            if ((this.onBeginFMGetFileByParentDelegate == null)) {
                this.onBeginFMGetFileByParentDelegate = new BeginOperationDelegate(this.OnBeginFMGetFileByParent);
            }
            if ((this.onEndFMGetFileByParentDelegate == null)) {
                this.onEndFMGetFileByParentDelegate = new EndOperationDelegate(this.OnEndFMGetFileByParent);
            }
            if ((this.onFMGetFileByParentCompletedDelegate == null)) {
                this.onFMGetFileByParentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFMGetFileByParentCompleted);
            }
            base.InvokeAsync(this.onBeginFMGetFileByParentDelegate, new object[] {
                        jsonData}, this.onEndFMGetFileByParentDelegate, this.onFMGetFileByParentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVSFileSave(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVSFileSave(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVSFileSave(System.IAsyncResult result) {
            base.Channel.EndVSFileSave(result);
        }
        
        private System.IAsyncResult OnBeginVSFileSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVSFileSave(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVSFileSave(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVSFileSave(result);
            return null;
        }
        
        private void OnVSFileSaveCompleted(object state) {
            if ((this.VSFileSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VSFileSaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VSFileSaveAsync(string jsonData) {
            this.VSFileSaveAsync(jsonData, null);
        }
        
        public void VSFileSaveAsync(string jsonData, object userState) {
            if ((this.onBeginVSFileSaveDelegate == null)) {
                this.onBeginVSFileSaveDelegate = new BeginOperationDelegate(this.OnBeginVSFileSave);
            }
            if ((this.onEndVSFileSaveDelegate == null)) {
                this.onEndVSFileSaveDelegate = new EndOperationDelegate(this.OnEndVSFileSave);
            }
            if ((this.onVSFileSaveCompletedDelegate == null)) {
                this.onVSFileSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVSFileSaveCompleted);
            }
            base.InvokeAsync(this.onBeginVSFileSaveDelegate, new object[] {
                        jsonData}, this.onEndVSFileSaveDelegate, this.onVSFileSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVSFileReadByID(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVSFileReadByID(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVSFileReadByID(System.IAsyncResult result) {
            base.Channel.EndVSFileReadByID(result);
        }
        
        private System.IAsyncResult OnBeginVSFileReadByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVSFileReadByID(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVSFileReadByID(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVSFileReadByID(result);
            return null;
        }
        
        private void OnVSFileReadByIDCompleted(object state) {
            if ((this.VSFileReadByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VSFileReadByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VSFileReadByIDAsync(string jsonData) {
            this.VSFileReadByIDAsync(jsonData, null);
        }
        
        public void VSFileReadByIDAsync(string jsonData, object userState) {
            if ((this.onBeginVSFileReadByIDDelegate == null)) {
                this.onBeginVSFileReadByIDDelegate = new BeginOperationDelegate(this.OnBeginVSFileReadByID);
            }
            if ((this.onEndVSFileReadByIDDelegate == null)) {
                this.onEndVSFileReadByIDDelegate = new EndOperationDelegate(this.OnEndVSFileReadByID);
            }
            if ((this.onVSFileReadByIDCompletedDelegate == null)) {
                this.onVSFileReadByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVSFileReadByIDCompleted);
            }
            base.InvokeAsync(this.onBeginVSFileReadByIDDelegate, new object[] {
                        jsonData}, this.onEndVSFileReadByIDDelegate, this.onVSFileReadByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVSFileDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVSFileDelete(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVSFileDelete(System.IAsyncResult result) {
            base.Channel.EndVSFileDelete(result);
        }
        
        private System.IAsyncResult OnBeginVSFileDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVSFileDelete(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVSFileDelete(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVSFileDelete(result);
            return null;
        }
        
        private void OnVSFileDeleteCompleted(object state) {
            if ((this.VSFileDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VSFileDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VSFileDeleteAsync(string jsonData) {
            this.VSFileDeleteAsync(jsonData, null);
        }
        
        public void VSFileDeleteAsync(string jsonData, object userState) {
            if ((this.onBeginVSFileDeleteDelegate == null)) {
                this.onBeginVSFileDeleteDelegate = new BeginOperationDelegate(this.OnBeginVSFileDelete);
            }
            if ((this.onEndVSFileDeleteDelegate == null)) {
                this.onEndVSFileDeleteDelegate = new EndOperationDelegate(this.OnEndVSFileDelete);
            }
            if ((this.onVSFileDeleteCompletedDelegate == null)) {
                this.onVSFileDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVSFileDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginVSFileDeleteDelegate, new object[] {
                        jsonData}, this.onEndVSFileDeleteDelegate, this.onVSFileDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVSGetVirtualTable(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVSGetVirtualTable(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVSGetVirtualTable(System.IAsyncResult result) {
            base.Channel.EndVSGetVirtualTable(result);
        }
        
        private System.IAsyncResult OnBeginVSGetVirtualTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVSGetVirtualTable(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVSGetVirtualTable(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVSGetVirtualTable(result);
            return null;
        }
        
        private void OnVSGetVirtualTableCompleted(object state) {
            if ((this.VSGetVirtualTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VSGetVirtualTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VSGetVirtualTableAsync(string jsonData) {
            this.VSGetVirtualTableAsync(jsonData, null);
        }
        
        public void VSGetVirtualTableAsync(string jsonData, object userState) {
            if ((this.onBeginVSGetVirtualTableDelegate == null)) {
                this.onBeginVSGetVirtualTableDelegate = new BeginOperationDelegate(this.OnBeginVSGetVirtualTable);
            }
            if ((this.onEndVSGetVirtualTableDelegate == null)) {
                this.onEndVSGetVirtualTableDelegate = new EndOperationDelegate(this.OnEndVSGetVirtualTable);
            }
            if ((this.onVSGetVirtualTableCompletedDelegate == null)) {
                this.onVSGetVirtualTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVSGetVirtualTableCompleted);
            }
            base.InvokeAsync(this.onBeginVSGetVirtualTableDelegate, new object[] {
                        jsonData}, this.onEndVSGetVirtualTableDelegate, this.onVSGetVirtualTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVSGetResources(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVSGetResources(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVSGetResources(System.IAsyncResult result) {
            base.Channel.EndVSGetResources(result);
        }
        
        private System.IAsyncResult OnBeginVSGetResources(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVSGetResources(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVSGetResources(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVSGetResources(result);
            return null;
        }
        
        private void OnVSGetResourcesCompleted(object state) {
            if ((this.VSGetResourcesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VSGetResourcesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VSGetResourcesAsync(string jsonData) {
            this.VSGetResourcesAsync(jsonData, null);
        }
        
        public void VSGetResourcesAsync(string jsonData, object userState) {
            if ((this.onBeginVSGetResourcesDelegate == null)) {
                this.onBeginVSGetResourcesDelegate = new BeginOperationDelegate(this.OnBeginVSGetResources);
            }
            if ((this.onEndVSGetResourcesDelegate == null)) {
                this.onEndVSGetResourcesDelegate = new EndOperationDelegate(this.OnEndVSGetResources);
            }
            if ((this.onVSGetResourcesCompletedDelegate == null)) {
                this.onVSGetResourcesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVSGetResourcesCompleted);
            }
            base.InvokeAsync(this.onBeginVSGetResourcesDelegate, new object[] {
                        jsonData}, this.onEndVSGetResourcesDelegate, this.onVSGetResourcesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVSGetversionsBypageName(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVSGetversionsBypageName(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVSGetversionsBypageName(System.IAsyncResult result) {
            base.Channel.EndVSGetversionsBypageName(result);
        }
        
        private System.IAsyncResult OnBeginVSGetversionsBypageName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVSGetversionsBypageName(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVSGetversionsBypageName(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVSGetversionsBypageName(result);
            return null;
        }
        
        private void OnVSGetversionsBypageNameCompleted(object state) {
            if ((this.VSGetversionsBypageNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VSGetversionsBypageNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VSGetversionsBypageNameAsync(string jsonData) {
            this.VSGetversionsBypageNameAsync(jsonData, null);
        }
        
        public void VSGetversionsBypageNameAsync(string jsonData, object userState) {
            if ((this.onBeginVSGetversionsBypageNameDelegate == null)) {
                this.onBeginVSGetversionsBypageNameDelegate = new BeginOperationDelegate(this.OnBeginVSGetversionsBypageName);
            }
            if ((this.onEndVSGetversionsBypageNameDelegate == null)) {
                this.onEndVSGetversionsBypageNameDelegate = new EndOperationDelegate(this.OnEndVSGetversionsBypageName);
            }
            if ((this.onVSGetversionsBypageNameCompletedDelegate == null)) {
                this.onVSGetversionsBypageNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVSGetversionsBypageNameCompleted);
            }
            base.InvokeAsync(this.onBeginVSGetversionsBypageNameDelegate, new object[] {
                        jsonData}, this.onEndVSGetversionsBypageNameDelegate, this.onVSGetversionsBypageNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVSGetPudversions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVSGetPudversions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVSGetPudversions(System.IAsyncResult result) {
            base.Channel.EndVSGetPudversions(result);
        }
        
        private System.IAsyncResult OnBeginVSGetPudversions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVSGetPudversions(callback, asyncState);
        }
        
        private object[] OnEndVSGetPudversions(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVSGetPudversions(result);
            return null;
        }
        
        private void OnVSGetPudversionsCompleted(object state) {
            if ((this.VSGetPudversionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VSGetPudversionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VSGetPudversionsAsync() {
            this.VSGetPudversionsAsync(null);
        }
        
        public void VSGetPudversionsAsync(object userState) {
            if ((this.onBeginVSGetPudversionsDelegate == null)) {
                this.onBeginVSGetPudversionsDelegate = new BeginOperationDelegate(this.OnBeginVSGetPudversions);
            }
            if ((this.onEndVSGetPudversionsDelegate == null)) {
                this.onEndVSGetPudversionsDelegate = new EndOperationDelegate(this.OnEndVSGetPudversions);
            }
            if ((this.onVSGetPudversionsCompletedDelegate == null)) {
                this.onVSGetPudversionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVSGetPudversionsCompleted);
            }
            base.InvokeAsync(this.onBeginVSGetPudversionsDelegate, null, this.onEndVSGetPudversionsDelegate, this.onVSGetPudversionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVSUpdatePubstate(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVSUpdatePubstate(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVSUpdatePubstate(System.IAsyncResult result) {
            base.Channel.EndVSUpdatePubstate(result);
        }
        
        private System.IAsyncResult OnBeginVSUpdatePubstate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVSUpdatePubstate(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVSUpdatePubstate(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVSUpdatePubstate(result);
            return null;
        }
        
        private void OnVSUpdatePubstateCompleted(object state) {
            if ((this.VSUpdatePubstateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VSUpdatePubstateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VSUpdatePubstateAsync(string jsonData) {
            this.VSUpdatePubstateAsync(jsonData, null);
        }
        
        public void VSUpdatePubstateAsync(string jsonData, object userState) {
            if ((this.onBeginVSUpdatePubstateDelegate == null)) {
                this.onBeginVSUpdatePubstateDelegate = new BeginOperationDelegate(this.OnBeginVSUpdatePubstate);
            }
            if ((this.onEndVSUpdatePubstateDelegate == null)) {
                this.onEndVSUpdatePubstateDelegate = new EndOperationDelegate(this.OnEndVSUpdatePubstate);
            }
            if ((this.onVSUpdatePubstateCompletedDelegate == null)) {
                this.onVSUpdatePubstateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVSUpdatePubstateCompleted);
            }
            base.InvokeAsync(this.onBeginVSUpdatePubstateDelegate, new object[] {
                        jsonData}, this.onEndVSUpdatePubstateDelegate, this.onVSUpdatePubstateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRtdbGetTagByIPTag(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRtdbGetTagByIPTag(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRtdbGetTagByIPTag(System.IAsyncResult result) {
            base.Channel.EndRtdbGetTagByIPTag(result);
        }
        
        private System.IAsyncResult OnBeginRtdbGetTagByIPTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRtdbGetTagByIPTag(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRtdbGetTagByIPTag(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRtdbGetTagByIPTag(result);
            return null;
        }
        
        private void OnRtdbGetTagByIPTagCompleted(object state) {
            if ((this.RtdbGetTagByIPTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RtdbGetTagByIPTagCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RtdbGetTagByIPTagAsync(string jsonData) {
            this.RtdbGetTagByIPTagAsync(jsonData, null);
        }
        
        public void RtdbGetTagByIPTagAsync(string jsonData, object userState) {
            if ((this.onBeginRtdbGetTagByIPTagDelegate == null)) {
                this.onBeginRtdbGetTagByIPTagDelegate = new BeginOperationDelegate(this.OnBeginRtdbGetTagByIPTag);
            }
            if ((this.onEndRtdbGetTagByIPTagDelegate == null)) {
                this.onEndRtdbGetTagByIPTagDelegate = new EndOperationDelegate(this.OnEndRtdbGetTagByIPTag);
            }
            if ((this.onRtdbGetTagByIPTagCompletedDelegate == null)) {
                this.onRtdbGetTagByIPTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRtdbGetTagByIPTagCompleted);
            }
            base.InvokeAsync(this.onBeginRtdbGetTagByIPTagDelegate, new object[] {
                        jsonData}, this.onEndRtdbGetTagByIPTagDelegate, this.onRtdbGetTagByIPTagCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRtdbGetHisData(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRtdbGetHisData(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRtdbGetHisData(System.IAsyncResult result) {
            base.Channel.EndRtdbGetHisData(result);
        }
        
        private System.IAsyncResult OnBeginRtdbGetHisData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRtdbGetHisData(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRtdbGetHisData(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRtdbGetHisData(result);
            return null;
        }
        
        private void OnRtdbGetHisDataCompleted(object state) {
            if ((this.RtdbGetHisDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RtdbGetHisDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RtdbGetHisDataAsync(string jsonData) {
            this.RtdbGetHisDataAsync(jsonData, null);
        }
        
        public void RtdbGetHisDataAsync(string jsonData, object userState) {
            if ((this.onBeginRtdbGetHisDataDelegate == null)) {
                this.onBeginRtdbGetHisDataDelegate = new BeginOperationDelegate(this.OnBeginRtdbGetHisData);
            }
            if ((this.onEndRtdbGetHisDataDelegate == null)) {
                this.onEndRtdbGetHisDataDelegate = new EndOperationDelegate(this.OnEndRtdbGetHisData);
            }
            if ((this.onRtdbGetHisDataCompletedDelegate == null)) {
                this.onRtdbGetHisDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRtdbGetHisDataCompleted);
            }
            base.InvokeAsync(this.onBeginRtdbGetHisDataDelegate, new object[] {
                        jsonData}, this.onEndRtdbGetHisDataDelegate, this.onRtdbGetHisDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRtdbConnTest(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRtdbConnTest(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRtdbConnTest(System.IAsyncResult result) {
            base.Channel.EndRtdbConnTest(result);
        }
        
        private System.IAsyncResult OnBeginRtdbConnTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRtdbConnTest(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRtdbConnTest(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRtdbConnTest(result);
            return null;
        }
        
        private void OnRtdbConnTestCompleted(object state) {
            if ((this.RtdbConnTestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RtdbConnTestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RtdbConnTestAsync(string jsonData) {
            this.RtdbConnTestAsync(jsonData, null);
        }
        
        public void RtdbConnTestAsync(string jsonData, object userState) {
            if ((this.onBeginRtdbConnTestDelegate == null)) {
                this.onBeginRtdbConnTestDelegate = new BeginOperationDelegate(this.OnBeginRtdbConnTest);
            }
            if ((this.onEndRtdbConnTestDelegate == null)) {
                this.onEndRtdbConnTestDelegate = new EndOperationDelegate(this.OnEndRtdbConnTest);
            }
            if ((this.onRtdbConnTestCompletedDelegate == null)) {
                this.onRtdbConnTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRtdbConnTestCompleted);
            }
            base.InvokeAsync(this.onBeginRtdbConnTestDelegate, new object[] {
                        jsonData}, this.onEndRtdbConnTestDelegate, this.onRtdbConnTestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRtdbSave(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRtdbSave(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRtdbSave(System.IAsyncResult result) {
            base.Channel.EndRtdbSave(result);
        }
        
        private System.IAsyncResult OnBeginRtdbSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRtdbSave(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRtdbSave(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRtdbSave(result);
            return null;
        }
        
        private void OnRtdbSaveCompleted(object state) {
            if ((this.RtdbSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RtdbSaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RtdbSaveAsync(string jsonData) {
            this.RtdbSaveAsync(jsonData, null);
        }
        
        public void RtdbSaveAsync(string jsonData, object userState) {
            if ((this.onBeginRtdbSaveDelegate == null)) {
                this.onBeginRtdbSaveDelegate = new BeginOperationDelegate(this.OnBeginRtdbSave);
            }
            if ((this.onEndRtdbSaveDelegate == null)) {
                this.onEndRtdbSaveDelegate = new EndOperationDelegate(this.OnEndRtdbSave);
            }
            if ((this.onRtdbSaveCompletedDelegate == null)) {
                this.onRtdbSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRtdbSaveCompleted);
            }
            base.InvokeAsync(this.onBeginRtdbSaveDelegate, new object[] {
                        jsonData}, this.onEndRtdbSaveDelegate, this.onRtdbSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRtdbDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRtdbDelete(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRtdbDelete(System.IAsyncResult result) {
            base.Channel.EndRtdbDelete(result);
        }
        
        private System.IAsyncResult OnBeginRtdbDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRtdbDelete(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRtdbDelete(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRtdbDelete(result);
            return null;
        }
        
        private void OnRtdbDeleteCompleted(object state) {
            if ((this.RtdbDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RtdbDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RtdbDeleteAsync(string jsonData) {
            this.RtdbDeleteAsync(jsonData, null);
        }
        
        public void RtdbDeleteAsync(string jsonData, object userState) {
            if ((this.onBeginRtdbDeleteDelegate == null)) {
                this.onBeginRtdbDeleteDelegate = new BeginOperationDelegate(this.OnBeginRtdbDelete);
            }
            if ((this.onEndRtdbDeleteDelegate == null)) {
                this.onEndRtdbDeleteDelegate = new EndOperationDelegate(this.OnEndRtdbDelete);
            }
            if ((this.onRtdbDeleteCompletedDelegate == null)) {
                this.onRtdbDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRtdbDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginRtdbDeleteDelegate, new object[] {
                        jsonData}, this.onEndRtdbDeleteDelegate, this.onRtdbDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRtdbLoad(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRtdbLoad(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRtdbLoad(System.IAsyncResult result) {
            base.Channel.EndRtdbLoad(result);
        }
        
        private System.IAsyncResult OnBeginRtdbLoad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRtdbLoad(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRtdbLoad(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRtdbLoad(result);
            return null;
        }
        
        private void OnRtdbLoadCompleted(object state) {
            if ((this.RtdbLoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RtdbLoadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RtdbLoadAsync(string jsonData) {
            this.RtdbLoadAsync(jsonData, null);
        }
        
        public void RtdbLoadAsync(string jsonData, object userState) {
            if ((this.onBeginRtdbLoadDelegate == null)) {
                this.onBeginRtdbLoadDelegate = new BeginOperationDelegate(this.OnBeginRtdbLoad);
            }
            if ((this.onEndRtdbLoadDelegate == null)) {
                this.onEndRtdbLoadDelegate = new EndOperationDelegate(this.OnEndRtdbLoad);
            }
            if ((this.onRtdbLoadCompletedDelegate == null)) {
                this.onRtdbLoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRtdbLoadCompleted);
            }
            base.InvokeAsync(this.onBeginRtdbLoadDelegate, new object[] {
                        jsonData}, this.onEndRtdbLoadDelegate, this.onRtdbLoadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRPSave(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRPSave(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRPSave(System.IAsyncResult result) {
            base.Channel.EndRPSave(result);
        }
        
        private System.IAsyncResult OnBeginRPSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRPSave(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRPSave(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRPSave(result);
            return null;
        }
        
        private void OnRPSaveCompleted(object state) {
            if ((this.RPSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RPSaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RPSaveAsync(string jsonData) {
            this.RPSaveAsync(jsonData, null);
        }
        
        public void RPSaveAsync(string jsonData, object userState) {
            if ((this.onBeginRPSaveDelegate == null)) {
                this.onBeginRPSaveDelegate = new BeginOperationDelegate(this.OnBeginRPSave);
            }
            if ((this.onEndRPSaveDelegate == null)) {
                this.onEndRPSaveDelegate = new EndOperationDelegate(this.OnEndRPSave);
            }
            if ((this.onRPSaveCompletedDelegate == null)) {
                this.onRPSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRPSaveCompleted);
            }
            base.InvokeAsync(this.onBeginRPSaveDelegate, new object[] {
                        jsonData}, this.onEndRPSaveDelegate, this.onRPSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRPLoad(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRPLoad(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRPLoad(System.IAsyncResult result) {
            base.Channel.EndRPLoad(result);
        }
        
        private System.IAsyncResult OnBeginRPLoad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRPLoad(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRPLoad(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRPLoad(result);
            return null;
        }
        
        private void OnRPLoadCompleted(object state) {
            if ((this.RPLoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RPLoadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RPLoadAsync(string jsonData) {
            this.RPLoadAsync(jsonData, null);
        }
        
        public void RPLoadAsync(string jsonData, object userState) {
            if ((this.onBeginRPLoadDelegate == null)) {
                this.onBeginRPLoadDelegate = new BeginOperationDelegate(this.OnBeginRPLoad);
            }
            if ((this.onEndRPLoadDelegate == null)) {
                this.onEndRPLoadDelegate = new EndOperationDelegate(this.OnEndRPLoad);
            }
            if ((this.onRPLoadCompletedDelegate == null)) {
                this.onRPLoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRPLoadCompleted);
            }
            base.InvokeAsync(this.onBeginRPLoadDelegate, new object[] {
                        jsonData}, this.onEndRPLoadDelegate, this.onRPLoadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRPDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRPDelete(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRPDelete(System.IAsyncResult result) {
            base.Channel.EndRPDelete(result);
        }
        
        private System.IAsyncResult OnBeginRPDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRPDelete(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRPDelete(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRPDelete(result);
            return null;
        }
        
        private void OnRPDeleteCompleted(object state) {
            if ((this.RPDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RPDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RPDeleteAsync(string jsonData) {
            this.RPDeleteAsync(jsonData, null);
        }
        
        public void RPDeleteAsync(string jsonData, object userState) {
            if ((this.onBeginRPDeleteDelegate == null)) {
                this.onBeginRPDeleteDelegate = new BeginOperationDelegate(this.OnBeginRPDelete);
            }
            if ((this.onEndRPDeleteDelegate == null)) {
                this.onEndRPDeleteDelegate = new EndOperationDelegate(this.OnEndRPDelete);
            }
            if ((this.onRPDeleteCompletedDelegate == null)) {
                this.onRPDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRPDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginRPDeleteDelegate, new object[] {
                        jsonData}, this.onEndRPDeleteDelegate, this.onRPDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRGSave(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRGSave(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRGSave(System.IAsyncResult result) {
            base.Channel.EndRGSave(result);
        }
        
        private System.IAsyncResult OnBeginRGSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRGSave(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRGSave(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRGSave(result);
            return null;
        }
        
        private void OnRGSaveCompleted(object state) {
            if ((this.RGSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RGSaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RGSaveAsync(string jsonData) {
            this.RGSaveAsync(jsonData, null);
        }
        
        public void RGSaveAsync(string jsonData, object userState) {
            if ((this.onBeginRGSaveDelegate == null)) {
                this.onBeginRGSaveDelegate = new BeginOperationDelegate(this.OnBeginRGSave);
            }
            if ((this.onEndRGSaveDelegate == null)) {
                this.onEndRGSaveDelegate = new EndOperationDelegate(this.OnEndRGSave);
            }
            if ((this.onRGSaveCompletedDelegate == null)) {
                this.onRGSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRGSaveCompleted);
            }
            base.InvokeAsync(this.onBeginRGSaveDelegate, new object[] {
                        jsonData}, this.onEndRGSaveDelegate, this.onRGSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRGLoad(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRGLoad(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRGLoad(System.IAsyncResult result) {
            base.Channel.EndRGLoad(result);
        }
        
        private System.IAsyncResult OnBeginRGLoad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRGLoad(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRGLoad(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRGLoad(result);
            return null;
        }
        
        private void OnRGLoadCompleted(object state) {
            if ((this.RGLoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RGLoadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RGLoadAsync(string jsonData) {
            this.RGLoadAsync(jsonData, null);
        }
        
        public void RGLoadAsync(string jsonData, object userState) {
            if ((this.onBeginRGLoadDelegate == null)) {
                this.onBeginRGLoadDelegate = new BeginOperationDelegate(this.OnBeginRGLoad);
            }
            if ((this.onEndRGLoadDelegate == null)) {
                this.onEndRGLoadDelegate = new EndOperationDelegate(this.OnEndRGLoad);
            }
            if ((this.onRGLoadCompletedDelegate == null)) {
                this.onRGLoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRGLoadCompleted);
            }
            base.InvokeAsync(this.onBeginRGLoadDelegate, new object[] {
                        jsonData}, this.onEndRGLoadDelegate, this.onRGLoadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRGDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRGDelete(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRGDelete(System.IAsyncResult result) {
            base.Channel.EndRGDelete(result);
        }
        
        private System.IAsyncResult OnBeginRGDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRGDelete(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRGDelete(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRGDelete(result);
            return null;
        }
        
        private void OnRGDeleteCompleted(object state) {
            if ((this.RGDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RGDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RGDeleteAsync(string jsonData) {
            this.RGDeleteAsync(jsonData, null);
        }
        
        public void RGDeleteAsync(string jsonData, object userState) {
            if ((this.onBeginRGDeleteDelegate == null)) {
                this.onBeginRGDeleteDelegate = new BeginOperationDelegate(this.OnBeginRGDelete);
            }
            if ((this.onEndRGDeleteDelegate == null)) {
                this.onEndRGDeleteDelegate = new EndOperationDelegate(this.OnEndRGDelete);
            }
            if ((this.onRGDeleteCompletedDelegate == null)) {
                this.onRGDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRGDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginRGDeleteDelegate, new object[] {
                        jsonData}, this.onEndRGDeleteDelegate, this.onRGDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRCSave(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRCSave(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRCSave(System.IAsyncResult result) {
            base.Channel.EndRCSave(result);
        }
        
        private System.IAsyncResult OnBeginRCSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRCSave(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRCSave(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRCSave(result);
            return null;
        }
        
        private void OnRCSaveCompleted(object state) {
            if ((this.RCSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RCSaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RCSaveAsync(string jsonData) {
            this.RCSaveAsync(jsonData, null);
        }
        
        public void RCSaveAsync(string jsonData, object userState) {
            if ((this.onBeginRCSaveDelegate == null)) {
                this.onBeginRCSaveDelegate = new BeginOperationDelegate(this.OnBeginRCSave);
            }
            if ((this.onEndRCSaveDelegate == null)) {
                this.onEndRCSaveDelegate = new EndOperationDelegate(this.OnEndRCSave);
            }
            if ((this.onRCSaveCompletedDelegate == null)) {
                this.onRCSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRCSaveCompleted);
            }
            base.InvokeAsync(this.onBeginRCSaveDelegate, new object[] {
                        jsonData}, this.onEndRCSaveDelegate, this.onRCSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRCLoad(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRCLoad(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRCLoad(System.IAsyncResult result) {
            base.Channel.EndRCLoad(result);
        }
        
        private System.IAsyncResult OnBeginRCLoad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRCLoad(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRCLoad(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRCLoad(result);
            return null;
        }
        
        private void OnRCLoadCompleted(object state) {
            if ((this.RCLoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RCLoadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RCLoadAsync(string jsonData) {
            this.RCLoadAsync(jsonData, null);
        }
        
        public void RCLoadAsync(string jsonData, object userState) {
            if ((this.onBeginRCLoadDelegate == null)) {
                this.onBeginRCLoadDelegate = new BeginOperationDelegate(this.OnBeginRCLoad);
            }
            if ((this.onEndRCLoadDelegate == null)) {
                this.onEndRCLoadDelegate = new EndOperationDelegate(this.OnEndRCLoad);
            }
            if ((this.onRCLoadCompletedDelegate == null)) {
                this.onRCLoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRCLoadCompleted);
            }
            base.InvokeAsync(this.onBeginRCLoadDelegate, new object[] {
                        jsonData}, this.onEndRCLoadDelegate, this.onRCLoadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRCDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRCDelete(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRCDelete(System.IAsyncResult result) {
            base.Channel.EndRCDelete(result);
        }
        
        private System.IAsyncResult OnBeginRCDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRCDelete(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRCDelete(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRCDelete(result);
            return null;
        }
        
        private void OnRCDeleteCompleted(object state) {
            if ((this.RCDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RCDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RCDeleteAsync(string jsonData) {
            this.RCDeleteAsync(jsonData, null);
        }
        
        public void RCDeleteAsync(string jsonData, object userState) {
            if ((this.onBeginRCDeleteDelegate == null)) {
                this.onBeginRCDeleteDelegate = new BeginOperationDelegate(this.OnBeginRCDelete);
            }
            if ((this.onEndRCDeleteDelegate == null)) {
                this.onEndRCDeleteDelegate = new EndOperationDelegate(this.OnEndRCDelete);
            }
            if ((this.onRCDeleteCompletedDelegate == null)) {
                this.onRCDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRCDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginRCDeleteDelegate, new object[] {
                        jsonData}, this.onEndRCDeleteDelegate, this.onRCDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRPQueryRTDBinfo(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRPQueryRTDBinfo(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRPQueryRTDBinfo(System.IAsyncResult result) {
            base.Channel.EndRPQueryRTDBinfo(result);
        }
        
        private System.IAsyncResult OnBeginRPQueryRTDBinfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRPQueryRTDBinfo(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRPQueryRTDBinfo(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRPQueryRTDBinfo(result);
            return null;
        }
        
        private void OnRPQueryRTDBinfoCompleted(object state) {
            if ((this.RPQueryRTDBinfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RPQueryRTDBinfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RPQueryRTDBinfoAsync(string jsonData) {
            this.RPQueryRTDBinfoAsync(jsonData, null);
        }
        
        public void RPQueryRTDBinfoAsync(string jsonData, object userState) {
            if ((this.onBeginRPQueryRTDBinfoDelegate == null)) {
                this.onBeginRPQueryRTDBinfoDelegate = new BeginOperationDelegate(this.OnBeginRPQueryRTDBinfo);
            }
            if ((this.onEndRPQueryRTDBinfoDelegate == null)) {
                this.onEndRPQueryRTDBinfoDelegate = new EndOperationDelegate(this.OnEndRPQueryRTDBinfo);
            }
            if ((this.onRPQueryRTDBinfoCompletedDelegate == null)) {
                this.onRPQueryRTDBinfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRPQueryRTDBinfoCompleted);
            }
            base.InvokeAsync(this.onBeginRPQueryRTDBinfoDelegate, new object[] {
                        jsonData}, this.onEndRPQueryRTDBinfoDelegate, this.onRPQueryRTDBinfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRtdbGetpoints(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRtdbGetpoints(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRtdbGetpoints(System.IAsyncResult result) {
            base.Channel.EndRtdbGetpoints(result);
        }
        
        private System.IAsyncResult OnBeginRtdbGetpoints(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRtdbGetpoints(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRtdbGetpoints(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRtdbGetpoints(result);
            return null;
        }
        
        private void OnRtdbGetpointsCompleted(object state) {
            if ((this.RtdbGetpointsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RtdbGetpointsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RtdbGetpointsAsync(string jsonData) {
            this.RtdbGetpointsAsync(jsonData, null);
        }
        
        public void RtdbGetpointsAsync(string jsonData, object userState) {
            if ((this.onBeginRtdbGetpointsDelegate == null)) {
                this.onBeginRtdbGetpointsDelegate = new BeginOperationDelegate(this.OnBeginRtdbGetpoints);
            }
            if ((this.onEndRtdbGetpointsDelegate == null)) {
                this.onEndRtdbGetpointsDelegate = new EndOperationDelegate(this.OnEndRtdbGetpoints);
            }
            if ((this.onRtdbGetpointsCompletedDelegate == null)) {
                this.onRtdbGetpointsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRtdbGetpointsCompleted);
            }
            base.InvokeAsync(this.onBeginRtdbGetpointsDelegate, new object[] {
                        jsonData}, this.onEndRtdbGetpointsDelegate, this.onRtdbGetpointsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRCalHistogram(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRCalHistogram(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRCalHistogram(System.IAsyncResult result) {
            base.Channel.EndRCalHistogram(result);
        }
        
        private System.IAsyncResult OnBeginRCalHistogram(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRCalHistogram(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRCalHistogram(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRCalHistogram(result);
            return null;
        }
        
        private void OnRCalHistogramCompleted(object state) {
            if ((this.RCalHistogramCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RCalHistogramCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RCalHistogramAsync(string jsonData) {
            this.RCalHistogramAsync(jsonData, null);
        }
        
        public void RCalHistogramAsync(string jsonData, object userState) {
            if ((this.onBeginRCalHistogramDelegate == null)) {
                this.onBeginRCalHistogramDelegate = new BeginOperationDelegate(this.OnBeginRCalHistogram);
            }
            if ((this.onEndRCalHistogramDelegate == null)) {
                this.onEndRCalHistogramDelegate = new EndOperationDelegate(this.OnEndRCalHistogram);
            }
            if ((this.onRCalHistogramCompletedDelegate == null)) {
                this.onRCalHistogramCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRCalHistogramCompleted);
            }
            base.InvokeAsync(this.onBeginRCalHistogramDelegate, new object[] {
                        jsonData}, this.onEndRCalHistogramDelegate, this.onRCalHistogramCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRCalNormalDis(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRCalNormalDis(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRCalNormalDis(System.IAsyncResult result) {
            base.Channel.EndRCalNormalDis(result);
        }
        
        private System.IAsyncResult OnBeginRCalNormalDis(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRCalNormalDis(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRCalNormalDis(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRCalNormalDis(result);
            return null;
        }
        
        private void OnRCalNormalDisCompleted(object state) {
            if ((this.RCalNormalDisCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RCalNormalDisCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RCalNormalDisAsync(string jsonData) {
            this.RCalNormalDisAsync(jsonData, null);
        }
        
        public void RCalNormalDisAsync(string jsonData, object userState) {
            if ((this.onBeginRCalNormalDisDelegate == null)) {
                this.onBeginRCalNormalDisDelegate = new BeginOperationDelegate(this.OnBeginRCalNormalDis);
            }
            if ((this.onEndRCalNormalDisDelegate == null)) {
                this.onEndRCalNormalDisDelegate = new EndOperationDelegate(this.OnEndRCalNormalDis);
            }
            if ((this.onRCalNormalDisCompletedDelegate == null)) {
                this.onRCalNormalDisCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRCalNormalDisCompleted);
            }
            base.InvokeAsync(this.onBeginRCalNormalDisDelegate, new object[] {
                        jsonData}, this.onEndRCalNormalDisDelegate, this.onRCalNormalDisCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRCalProcessCap(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRCalProcessCap(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRCalProcessCap(System.IAsyncResult result) {
            base.Channel.EndRCalProcessCap(result);
        }
        
        private System.IAsyncResult OnBeginRCalProcessCap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRCalProcessCap(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRCalProcessCap(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRCalProcessCap(result);
            return null;
        }
        
        private void OnRCalProcessCapCompleted(object state) {
            if ((this.RCalProcessCapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RCalProcessCapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RCalProcessCapAsync(string jsonData) {
            this.RCalProcessCapAsync(jsonData, null);
        }
        
        public void RCalProcessCapAsync(string jsonData, object userState) {
            if ((this.onBeginRCalProcessCapDelegate == null)) {
                this.onBeginRCalProcessCapDelegate = new BeginOperationDelegate(this.OnBeginRCalProcessCap);
            }
            if ((this.onEndRCalProcessCapDelegate == null)) {
                this.onEndRCalProcessCapDelegate = new EndOperationDelegate(this.OnEndRCalProcessCap);
            }
            if ((this.onRCalProcessCapCompletedDelegate == null)) {
                this.onRCalProcessCapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRCalProcessCapCompleted);
            }
            base.InvokeAsync(this.onBeginRCalProcessCapDelegate, new object[] {
                        jsonData}, this.onEndRCalProcessCapDelegate, this.onRCalProcessCapCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRCalProcessPer(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRCalProcessPer(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRCalProcessPer(System.IAsyncResult result) {
            base.Channel.EndRCalProcessPer(result);
        }
        
        private System.IAsyncResult OnBeginRCalProcessPer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRCalProcessPer(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRCalProcessPer(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRCalProcessPer(result);
            return null;
        }
        
        private void OnRCalProcessPerCompleted(object state) {
            if ((this.RCalProcessPerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RCalProcessPerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RCalProcessPerAsync(string jsonData) {
            this.RCalProcessPerAsync(jsonData, null);
        }
        
        public void RCalProcessPerAsync(string jsonData, object userState) {
            if ((this.onBeginRCalProcessPerDelegate == null)) {
                this.onBeginRCalProcessPerDelegate = new BeginOperationDelegate(this.OnBeginRCalProcessPer);
            }
            if ((this.onEndRCalProcessPerDelegate == null)) {
                this.onEndRCalProcessPerDelegate = new EndOperationDelegate(this.OnEndRCalProcessPer);
            }
            if ((this.onRCalProcessPerCompletedDelegate == null)) {
                this.onRCalProcessPerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRCalProcessPerCompleted);
            }
            base.InvokeAsync(this.onBeginRCalProcessPerDelegate, new object[] {
                        jsonData}, this.onEndRCalProcessPerDelegate, this.onRCalProcessPerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRCalBoxplot(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRCalBoxplot(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRCalBoxplot(System.IAsyncResult result) {
            base.Channel.EndRCalBoxplot(result);
        }
        
        private System.IAsyncResult OnBeginRCalBoxplot(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRCalBoxplot(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRCalBoxplot(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRCalBoxplot(result);
            return null;
        }
        
        private void OnRCalBoxplotCompleted(object state) {
            if ((this.RCalBoxplotCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RCalBoxplotCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RCalBoxplotAsync(string jsonData) {
            this.RCalBoxplotAsync(jsonData, null);
        }
        
        public void RCalBoxplotAsync(string jsonData, object userState) {
            if ((this.onBeginRCalBoxplotDelegate == null)) {
                this.onBeginRCalBoxplotDelegate = new BeginOperationDelegate(this.OnBeginRCalBoxplot);
            }
            if ((this.onEndRCalBoxplotDelegate == null)) {
                this.onEndRCalBoxplotDelegate = new EndOperationDelegate(this.OnEndRCalBoxplot);
            }
            if ((this.onRCalBoxplotCompletedDelegate == null)) {
                this.onRCalBoxplotCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRCalBoxplotCompleted);
            }
            base.InvokeAsync(this.onBeginRCalBoxplotDelegate, new object[] {
                        jsonData}, this.onEndRCalBoxplotDelegate, this.onRCalBoxplotCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRCalMeanRange(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRCalMeanRange(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRCalMeanRange(System.IAsyncResult result) {
            base.Channel.EndRCalMeanRange(result);
        }
        
        private System.IAsyncResult OnBeginRCalMeanRange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRCalMeanRange(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRCalMeanRange(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRCalMeanRange(result);
            return null;
        }
        
        private void OnRCalMeanRangeCompleted(object state) {
            if ((this.RCalMeanRangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RCalMeanRangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RCalMeanRangeAsync(string jsonData) {
            this.RCalMeanRangeAsync(jsonData, null);
        }
        
        public void RCalMeanRangeAsync(string jsonData, object userState) {
            if ((this.onBeginRCalMeanRangeDelegate == null)) {
                this.onBeginRCalMeanRangeDelegate = new BeginOperationDelegate(this.OnBeginRCalMeanRange);
            }
            if ((this.onEndRCalMeanRangeDelegate == null)) {
                this.onEndRCalMeanRangeDelegate = new EndOperationDelegate(this.OnEndRCalMeanRange);
            }
            if ((this.onRCalMeanRangeCompletedDelegate == null)) {
                this.onRCalMeanRangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRCalMeanRangeCompleted);
            }
            base.InvokeAsync(this.onBeginRCalMeanRangeDelegate, new object[] {
                        jsonData}, this.onEndRCalMeanRangeDelegate, this.onRCalMeanRangeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRCal4MR_Plot(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRCal4MR_Plot(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRCal4MR_Plot(System.IAsyncResult result) {
            base.Channel.EndRCal4MR_Plot(result);
        }
        
        private System.IAsyncResult OnBeginRCal4MR_Plot(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRCal4MR_Plot(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRCal4MR_Plot(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRCal4MR_Plot(result);
            return null;
        }
        
        private void OnRCal4MR_PlotCompleted(object state) {
            if ((this.RCal4MR_PlotCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RCal4MR_PlotCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RCal4MR_PlotAsync(string jsonData) {
            this.RCal4MR_PlotAsync(jsonData, null);
        }
        
        public void RCal4MR_PlotAsync(string jsonData, object userState) {
            if ((this.onBeginRCal4MR_PlotDelegate == null)) {
                this.onBeginRCal4MR_PlotDelegate = new BeginOperationDelegate(this.OnBeginRCal4MR_Plot);
            }
            if ((this.onEndRCal4MR_PlotDelegate == null)) {
                this.onEndRCal4MR_PlotDelegate = new EndOperationDelegate(this.OnEndRCal4MR_Plot);
            }
            if ((this.onRCal4MR_PlotCompletedDelegate == null)) {
                this.onRCal4MR_PlotCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRCal4MR_PlotCompleted);
            }
            base.InvokeAsync(this.onBeginRCal4MR_PlotDelegate, new object[] {
                        jsonData}, this.onEndRCal4MR_PlotDelegate, this.onRCal4MR_PlotCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRCalIVPlot(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRCalIVPlot(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRCalIVPlot(System.IAsyncResult result) {
            base.Channel.EndRCalIVPlot(result);
        }
        
        private System.IAsyncResult OnBeginRCalIVPlot(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRCalIVPlot(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRCalIVPlot(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRCalIVPlot(result);
            return null;
        }
        
        private void OnRCalIVPlotCompleted(object state) {
            if ((this.RCalIVPlotCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RCalIVPlotCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RCalIVPlotAsync(string jsonData) {
            this.RCalIVPlotAsync(jsonData, null);
        }
        
        public void RCalIVPlotAsync(string jsonData, object userState) {
            if ((this.onBeginRCalIVPlotDelegate == null)) {
                this.onBeginRCalIVPlotDelegate = new BeginOperationDelegate(this.OnBeginRCalIVPlot);
            }
            if ((this.onEndRCalIVPlotDelegate == null)) {
                this.onEndRCalIVPlotDelegate = new EndOperationDelegate(this.OnEndRCalIVPlot);
            }
            if ((this.onRCalIVPlotCompletedDelegate == null)) {
                this.onRCalIVPlotCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRCalIVPlotCompleted);
            }
            base.InvokeAsync(this.onBeginRCalIVPlotDelegate, new object[] {
                        jsonData}, this.onEndRCalIVPlotDelegate, this.onRCalIVPlotCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginRCalMeanSDPlot(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRCalMeanSDPlot(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndRCalMeanSDPlot(System.IAsyncResult result) {
            base.Channel.EndRCalMeanSDPlot(result);
        }
        
        private System.IAsyncResult OnBeginRCalMeanSDPlot(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginRCalMeanSDPlot(jsonData, callback, asyncState);
        }
        
        private object[] OnEndRCalMeanSDPlot(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndRCalMeanSDPlot(result);
            return null;
        }
        
        private void OnRCalMeanSDPlotCompleted(object state) {
            if ((this.RCalMeanSDPlotCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RCalMeanSDPlotCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RCalMeanSDPlotAsync(string jsonData) {
            this.RCalMeanSDPlotAsync(jsonData, null);
        }
        
        public void RCalMeanSDPlotAsync(string jsonData, object userState) {
            if ((this.onBeginRCalMeanSDPlotDelegate == null)) {
                this.onBeginRCalMeanSDPlotDelegate = new BeginOperationDelegate(this.OnBeginRCalMeanSDPlot);
            }
            if ((this.onEndRCalMeanSDPlotDelegate == null)) {
                this.onEndRCalMeanSDPlotDelegate = new EndOperationDelegate(this.OnEndRCalMeanSDPlot);
            }
            if ((this.onRCalMeanSDPlotCompletedDelegate == null)) {
                this.onRCalMeanSDPlotCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRCalMeanSDPlotCompleted);
            }
            base.InvokeAsync(this.onBeginRCalMeanSDPlotDelegate, new object[] {
                        jsonData}, this.onEndRCalMeanSDPlotDelegate, this.onRCalMeanSDPlotCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginPageExport(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPageExport(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndPageExport(System.IAsyncResult result) {
            base.Channel.EndPageExport(result);
        }
        
        private System.IAsyncResult OnBeginPageExport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginPageExport(jsonData, callback, asyncState);
        }
        
        private object[] OnEndPageExport(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndPageExport(result);
            return null;
        }
        
        private void OnPageExportCompleted(object state) {
            if ((this.PageExportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PageExportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PageExportAsync(string jsonData) {
            this.PageExportAsync(jsonData, null);
        }
        
        public void PageExportAsync(string jsonData, object userState) {
            if ((this.onBeginPageExportDelegate == null)) {
                this.onBeginPageExportDelegate = new BeginOperationDelegate(this.OnBeginPageExport);
            }
            if ((this.onEndPageExportDelegate == null)) {
                this.onEndPageExportDelegate = new EndOperationDelegate(this.OnEndPageExport);
            }
            if ((this.onPageExportCompletedDelegate == null)) {
                this.onPageExportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPageExportCompleted);
            }
            base.InvokeAsync(this.onBeginPageExportDelegate, new object[] {
                        jsonData}, this.onEndPageExportDelegate, this.onPageExportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginDeleteExportFile(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteExportFile(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndDeleteExportFile(System.IAsyncResult result) {
            base.Channel.EndDeleteExportFile(result);
        }
        
        private System.IAsyncResult OnBeginDeleteExportFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginDeleteExportFile(jsonData, callback, asyncState);
        }
        
        private object[] OnEndDeleteExportFile(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndDeleteExportFile(result);
            return null;
        }
        
        private void OnDeleteExportFileCompleted(object state) {
            if ((this.DeleteExportFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteExportFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteExportFileAsync(string jsonData) {
            this.DeleteExportFileAsync(jsonData, null);
        }
        
        public void DeleteExportFileAsync(string jsonData, object userState) {
            if ((this.onBeginDeleteExportFileDelegate == null)) {
                this.onBeginDeleteExportFileDelegate = new BeginOperationDelegate(this.OnBeginDeleteExportFile);
            }
            if ((this.onEndDeleteExportFileDelegate == null)) {
                this.onEndDeleteExportFileDelegate = new EndOperationDelegate(this.OnEndDeleteExportFile);
            }
            if ((this.onDeleteExportFileCompletedDelegate == null)) {
                this.onDeleteExportFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteExportFileCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteExportFileDelegate, new object[] {
                        jsonData}, this.onEndDeleteExportFileDelegate, this.onDeleteExportFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginHtmlToPage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHtmlToPage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndHtmlToPage(System.IAsyncResult result) {
            base.Channel.EndHtmlToPage(result);
        }
        
        private System.IAsyncResult OnBeginHtmlToPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginHtmlToPage(callback, asyncState);
        }
        
        private object[] OnEndHtmlToPage(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndHtmlToPage(result);
            return null;
        }
        
        private void OnHtmlToPageCompleted(object state) {
            if ((this.HtmlToPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HtmlToPageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HtmlToPageAsync() {
            this.HtmlToPageAsync(null);
        }
        
        public void HtmlToPageAsync(object userState) {
            if ((this.onBeginHtmlToPageDelegate == null)) {
                this.onBeginHtmlToPageDelegate = new BeginOperationDelegate(this.OnBeginHtmlToPage);
            }
            if ((this.onEndHtmlToPageDelegate == null)) {
                this.onEndHtmlToPageDelegate = new EndOperationDelegate(this.OnEndHtmlToPage);
            }
            if ((this.onHtmlToPageCompletedDelegate == null)) {
                this.onHtmlToPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHtmlToPageCompleted);
            }
            base.InvokeAsync(this.onBeginHtmlToPageDelegate, null, this.onEndHtmlToPageDelegate, this.onHtmlToPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginHtmlToPdf(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHtmlToPdf(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndHtmlToPdf(System.IAsyncResult result) {
            base.Channel.EndHtmlToPdf(result);
        }
        
        private System.IAsyncResult OnBeginHtmlToPdf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginHtmlToPdf(callback, asyncState);
        }
        
        private object[] OnEndHtmlToPdf(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndHtmlToPdf(result);
            return null;
        }
        
        private void OnHtmlToPdfCompleted(object state) {
            if ((this.HtmlToPdfCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HtmlToPdfCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HtmlToPdfAsync() {
            this.HtmlToPdfAsync(null);
        }
        
        public void HtmlToPdfAsync(object userState) {
            if ((this.onBeginHtmlToPdfDelegate == null)) {
                this.onBeginHtmlToPdfDelegate = new BeginOperationDelegate(this.OnBeginHtmlToPdf);
            }
            if ((this.onEndHtmlToPdfDelegate == null)) {
                this.onEndHtmlToPdfDelegate = new EndOperationDelegate(this.OnEndHtmlToPdf);
            }
            if ((this.onHtmlToPdfCompletedDelegate == null)) {
                this.onHtmlToPdfCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHtmlToPdfCompleted);
            }
            base.InvokeAsync(this.onBeginHtmlToPdfDelegate, null, this.onEndHtmlToPdfDelegate, this.onHtmlToPdfCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginMagicExport(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMagicExport(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndMagicExport(System.IAsyncResult result) {
            base.Channel.EndMagicExport(result);
        }
        
        private System.IAsyncResult OnBeginMagicExport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginMagicExport(jsonData, callback, asyncState);
        }
        
        private object[] OnEndMagicExport(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndMagicExport(result);
            return null;
        }
        
        private void OnMagicExportCompleted(object state) {
            if ((this.MagicExportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MagicExportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MagicExportAsync(string jsonData) {
            this.MagicExportAsync(jsonData, null);
        }
        
        public void MagicExportAsync(string jsonData, object userState) {
            if ((this.onBeginMagicExportDelegate == null)) {
                this.onBeginMagicExportDelegate = new BeginOperationDelegate(this.OnBeginMagicExport);
            }
            if ((this.onEndMagicExportDelegate == null)) {
                this.onEndMagicExportDelegate = new EndOperationDelegate(this.OnEndMagicExport);
            }
            if ((this.onMagicExportCompletedDelegate == null)) {
                this.onMagicExportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMagicExportCompleted);
            }
            base.InvokeAsync(this.onBeginMagicExportDelegate, new object[] {
                        jsonData}, this.onEndMagicExportDelegate, this.onMagicExportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BegindeleteFile(string filePath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindeleteFile(filePath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EnddeleteFile(System.IAsyncResult result) {
            base.Channel.EnddeleteFile(result);
        }
        
        private System.IAsyncResult OnBegindeleteFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filePath = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BegindeleteFile(filePath, callback, asyncState);
        }
        
        private object[] OnEnddeleteFile(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EnddeleteFile(result);
            return null;
        }
        
        private void OndeleteFileCompleted(object state) {
            if ((this.deleteFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.deleteFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void deleteFileAsync(string filePath) {
            this.deleteFileAsync(filePath, null);
        }
        
        public void deleteFileAsync(string filePath, object userState) {
            if ((this.onBegindeleteFileDelegate == null)) {
                this.onBegindeleteFileDelegate = new BeginOperationDelegate(this.OnBegindeleteFile);
            }
            if ((this.onEnddeleteFileDelegate == null)) {
                this.onEnddeleteFileDelegate = new EndOperationDelegate(this.OnEnddeleteFile);
            }
            if ((this.ondeleteFileCompletedDelegate == null)) {
                this.ondeleteFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndeleteFileCompleted);
            }
            base.InvokeAsync(this.onBegindeleteFileDelegate, new object[] {
                        filePath}, this.onEnddeleteFileDelegate, this.ondeleteFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTSaveScMethodInfo(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTSaveScMethodInfo(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTSaveScMethodInfo(System.IAsyncResult result) {
            base.Channel.EndVTSaveScMethodInfo(result);
        }
        
        private System.IAsyncResult OnBeginVTSaveScMethodInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTSaveScMethodInfo(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVTSaveScMethodInfo(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTSaveScMethodInfo(result);
            return null;
        }
        
        private void OnVTSaveScMethodInfoCompleted(object state) {
            if ((this.VTSaveScMethodInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTSaveScMethodInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTSaveScMethodInfoAsync(string jsonData) {
            this.VTSaveScMethodInfoAsync(jsonData, null);
        }
        
        public void VTSaveScMethodInfoAsync(string jsonData, object userState) {
            if ((this.onBeginVTSaveScMethodInfoDelegate == null)) {
                this.onBeginVTSaveScMethodInfoDelegate = new BeginOperationDelegate(this.OnBeginVTSaveScMethodInfo);
            }
            if ((this.onEndVTSaveScMethodInfoDelegate == null)) {
                this.onEndVTSaveScMethodInfoDelegate = new EndOperationDelegate(this.OnEndVTSaveScMethodInfo);
            }
            if ((this.onVTSaveScMethodInfoCompletedDelegate == null)) {
                this.onVTSaveScMethodInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTSaveScMethodInfoCompleted);
            }
            base.InvokeAsync(this.onBeginVTSaveScMethodInfoDelegate, new object[] {
                        jsonData}, this.onEndVTSaveScMethodInfoDelegate, this.onVTSaveScMethodInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTGetScMethodInfoEx(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTGetScMethodInfoEx(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTGetScMethodInfoEx(System.IAsyncResult result) {
            base.Channel.EndVTGetScMethodInfoEx(result);
        }
        
        private System.IAsyncResult OnBeginVTGetScMethodInfoEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTGetScMethodInfoEx(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVTGetScMethodInfoEx(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTGetScMethodInfoEx(result);
            return null;
        }
        
        private void OnVTGetScMethodInfoExCompleted(object state) {
            if ((this.VTGetScMethodInfoExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTGetScMethodInfoExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTGetScMethodInfoExAsync(string jsonData) {
            this.VTGetScMethodInfoExAsync(jsonData, null);
        }
        
        public void VTGetScMethodInfoExAsync(string jsonData, object userState) {
            if ((this.onBeginVTGetScMethodInfoExDelegate == null)) {
                this.onBeginVTGetScMethodInfoExDelegate = new BeginOperationDelegate(this.OnBeginVTGetScMethodInfoEx);
            }
            if ((this.onEndVTGetScMethodInfoExDelegate == null)) {
                this.onEndVTGetScMethodInfoExDelegate = new EndOperationDelegate(this.OnEndVTGetScMethodInfoEx);
            }
            if ((this.onVTGetScMethodInfoExCompletedDelegate == null)) {
                this.onVTGetScMethodInfoExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTGetScMethodInfoExCompleted);
            }
            base.InvokeAsync(this.onBeginVTGetScMethodInfoExDelegate, new object[] {
                        jsonData}, this.onEndVTGetScMethodInfoExDelegate, this.onVTGetScMethodInfoExCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTGetScMethodInfo(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTGetScMethodInfo(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTGetScMethodInfo(System.IAsyncResult result) {
            base.Channel.EndVTGetScMethodInfo(result);
        }
        
        private System.IAsyncResult OnBeginVTGetScMethodInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTGetScMethodInfo(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVTGetScMethodInfo(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTGetScMethodInfo(result);
            return null;
        }
        
        private void OnVTGetScMethodInfoCompleted(object state) {
            if ((this.VTGetScMethodInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTGetScMethodInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTGetScMethodInfoAsync(string jsonData) {
            this.VTGetScMethodInfoAsync(jsonData, null);
        }
        
        public void VTGetScMethodInfoAsync(string jsonData, object userState) {
            if ((this.onBeginVTGetScMethodInfoDelegate == null)) {
                this.onBeginVTGetScMethodInfoDelegate = new BeginOperationDelegate(this.OnBeginVTGetScMethodInfo);
            }
            if ((this.onEndVTGetScMethodInfoDelegate == null)) {
                this.onEndVTGetScMethodInfoDelegate = new EndOperationDelegate(this.OnEndVTGetScMethodInfo);
            }
            if ((this.onVTGetScMethodInfoCompletedDelegate == null)) {
                this.onVTGetScMethodInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTGetScMethodInfoCompleted);
            }
            base.InvokeAsync(this.onBeginVTGetScMethodInfoDelegate, new object[] {
                        jsonData}, this.onEndVTGetScMethodInfoDelegate, this.onVTGetScMethodInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTReadMethodParams(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTReadMethodParams(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTReadMethodParams(System.IAsyncResult result) {
            base.Channel.EndVTReadMethodParams(result);
        }
        
        private System.IAsyncResult OnBeginVTReadMethodParams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTReadMethodParams(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVTReadMethodParams(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTReadMethodParams(result);
            return null;
        }
        
        private void OnVTReadMethodParamsCompleted(object state) {
            if ((this.VTReadMethodParamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTReadMethodParamsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTReadMethodParamsAsync(string jsonData) {
            this.VTReadMethodParamsAsync(jsonData, null);
        }
        
        public void VTReadMethodParamsAsync(string jsonData, object userState) {
            if ((this.onBeginVTReadMethodParamsDelegate == null)) {
                this.onBeginVTReadMethodParamsDelegate = new BeginOperationDelegate(this.OnBeginVTReadMethodParams);
            }
            if ((this.onEndVTReadMethodParamsDelegate == null)) {
                this.onEndVTReadMethodParamsDelegate = new EndOperationDelegate(this.OnEndVTReadMethodParams);
            }
            if ((this.onVTReadMethodParamsCompletedDelegate == null)) {
                this.onVTReadMethodParamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTReadMethodParamsCompleted);
            }
            base.InvokeAsync(this.onBeginVTReadMethodParamsDelegate, new object[] {
                        jsonData}, this.onEndVTReadMethodParamsDelegate, this.onVTReadMethodParamsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GetWebXML.ServiceReference1.Service1Soap.BeginVTReadDataTableSchema(string jsonData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVTReadDataTableSchema(jsonData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GetWebXML.ServiceReference1.Service1Soap.EndVTReadDataTableSchema(System.IAsyncResult result) {
            base.Channel.EndVTReadDataTableSchema(result);
        }
        
        private System.IAsyncResult OnBeginVTReadDataTableSchema(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jsonData = ((string)(inValues[0]));
            return ((GetWebXML.ServiceReference1.Service1Soap)(this)).BeginVTReadDataTableSchema(jsonData, callback, asyncState);
        }
        
        private object[] OnEndVTReadDataTableSchema(System.IAsyncResult result) {
            ((GetWebXML.ServiceReference1.Service1Soap)(this)).EndVTReadDataTableSchema(result);
            return null;
        }
        
        private void OnVTReadDataTableSchemaCompleted(object state) {
            if ((this.VTReadDataTableSchemaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VTReadDataTableSchemaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VTReadDataTableSchemaAsync(string jsonData) {
            this.VTReadDataTableSchemaAsync(jsonData, null);
        }
        
        public void VTReadDataTableSchemaAsync(string jsonData, object userState) {
            if ((this.onBeginVTReadDataTableSchemaDelegate == null)) {
                this.onBeginVTReadDataTableSchemaDelegate = new BeginOperationDelegate(this.OnBeginVTReadDataTableSchema);
            }
            if ((this.onEndVTReadDataTableSchemaDelegate == null)) {
                this.onEndVTReadDataTableSchemaDelegate = new EndOperationDelegate(this.OnEndVTReadDataTableSchema);
            }
            if ((this.onVTReadDataTableSchemaCompletedDelegate == null)) {
                this.onVTReadDataTableSchemaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVTReadDataTableSchemaCompleted);
            }
            base.InvokeAsync(this.onBeginVTReadDataTableSchemaDelegate, new object[] {
                        jsonData}, this.onEndVTReadDataTableSchemaDelegate, this.onVTReadDataTableSchemaCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GetWebXML.ServiceReference1.Service1Soap CreateChannel() {
            return new Service1SoapClientChannel(this);
        }
        
        private class Service1SoapClientChannel : ChannelBase<GetWebXML.ServiceReference1.Service1Soap>, GetWebXML.ServiceReference1.Service1Soap {
            
            public Service1SoapClientChannel(System.ServiceModel.ClientBase<GetWebXML.ServiceReference1.Service1Soap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDCGetAllConnStr(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DCGetAllConnStr", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDCGetAllConnStr(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DCGetAllConnStr", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIOS_VSFileReadByID(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("IOS_VSFileReadByID", _args, callback, asyncState);
                return _result;
            }
            
            public string EndIOS_VSFileReadByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("IOS_VSFileReadByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIOS_DSReadData(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("IOS_DSReadData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndIOS_DSReadData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("IOS_DSReadData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIOS_FMGetFileByParent(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("IOS_FMGetFileByParent", _args, callback, asyncState);
                return _result;
            }
            
            public string EndIOS_FMGetFileByParent(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("IOS_FMGetFileByParent", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIOS_VSGetPudversions(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("IOS_VSGetPudversions", _args, callback, asyncState);
                return _result;
            }
            
            public string EndIOS_VSGetPudversions(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("IOS_VSGetPudversions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginVerifyLicense(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("VerifyLicense", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVerifyLicense(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VerifyLicense", _args, result);
            }
            
            public System.IAsyncResult BeginVTQueryScMethod(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VTQueryScMethod", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTQueryScMethod(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTQueryScMethod", _args, result);
            }
            
            public System.IAsyncResult BeginVTAllEntitys(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("VTAllEntitys", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTAllEntitys(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTAllEntitys", _args, result);
            }
            
            public System.IAsyncResult BeginDSExcelGetAll(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DSExcelGetAll", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDSExcelGetAll(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DSExcelGetAll", _args, result);
            }
            
            public System.IAsyncResult BeginDSExcelGetSheetName(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DSExcelGetSheetName", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDSExcelGetSheetName(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DSExcelGetSheetName", _args, result);
            }
            
            public System.IAsyncResult BeginDSExcelTest(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DSExcelTest", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDSExcelTest(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DSExcelTest", _args, result);
            }
            
            public System.IAsyncResult BeginGetImageList(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("GetImageList", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetImageList(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetImageList", _args, result);
            }
            
            public System.IAsyncResult BeginImageReName(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("ImageReName", _args, callback, asyncState);
                return _result;
            }
            
            public void EndImageReName(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ImageReName", _args, result);
            }
            
            public System.IAsyncResult BeginImageDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("ImageDelete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndImageDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ImageDelete", _args, result);
            }
            
            public System.IAsyncResult BeginReadConfigXmlList(string path, string extensionName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = path;
                _args[1] = extensionName;
                System.IAsyncResult _result = base.BeginInvoke("ReadConfigXmlList", _args, callback, asyncState);
                return _result;
            }
            
            public string EndReadConfigXmlList(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ReadConfigXmlList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveScMethodInfoTest(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("SaveScMethodInfoTest", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSaveScMethodInfoTest(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SaveScMethodInfoTest", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDCSave(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DCSave", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDCSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DCSave", _args, result);
            }
            
            public System.IAsyncResult BeginDCDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DCDelete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDCDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DCDelete", _args, result);
            }
            
            public System.IAsyncResult BeginDCTest(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DCTest", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDCTest(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DCTest", _args, result);
            }
            
            public System.IAsyncResult BeginDCGetAllConn(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DCGetAllConn", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDCGetAllConn(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DCGetAllConn", _args, result);
            }
            
            public System.IAsyncResult BeginDCGetNamesByID(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DCGetNamesByID", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDCGetNamesByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DCGetNamesByID", _args, result);
            }
            
            public System.IAsyncResult BeginDCGetColumnsByID(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DCGetColumnsByID", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDCGetColumnsByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DCGetColumnsByID", _args, result);
            }
            
            public System.IAsyncResult BeginDCGetDataByID(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DCGetDataByID", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDCGetDataByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DCGetDataByID", _args, result);
            }
            
            public System.IAsyncResult BeginDCGetConnDByID(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DCGetConnDByID", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDCGetConnDByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DCGetConnDByID", _args, result);
            }
            
            public System.IAsyncResult BeginVTColumInfos(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VTColumInfos", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTColumInfos(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTColumInfos", _args, result);
            }
            
            public System.IAsyncResult BeginVTSave(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VTSave", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTSave", _args, result);
            }
            
            public System.IAsyncResult BeginVTDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VTDelete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTDelete", _args, result);
            }
            
            public System.IAsyncResult BeginVTGetVirtualTableByDS(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VTGetVirtualTableByDS", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTGetVirtualTableByDS(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTGetVirtualTableByDS", _args, result);
            }
            
            public System.IAsyncResult BeginVTGetDataBySql(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VTGetDataBySql", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTGetDataBySql(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTGetDataBySql", _args, result);
            }
            
            public System.IAsyncResult BeginVTGetTableDetailsByDS(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VTGetTableDetailsByDS", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTGetTableDetailsByDS(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTGetTableDetailsByDS", _args, result);
            }
            
            public System.IAsyncResult BeginDSSave(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DSSave", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDSSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DSSave", _args, result);
            }
            
            public System.IAsyncResult BeginDSDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DSDelete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDSDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DSDelete", _args, result);
            }
            
            public System.IAsyncResult BeginDSAllDataSet(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DSAllDataSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDSAllDataSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DSAllDataSet", _args, result);
            }
            
            public System.IAsyncResult BeginDSDataSetByID(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DSDataSetByID", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDSDataSetByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DSDataSetByID", _args, result);
            }
            
            public System.IAsyncResult BeginDSReadData(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DSReadData", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDSReadData(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DSReadData", _args, result);
            }
            
            public System.IAsyncResult BeginDSTestData(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DSTestData", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDSTestData(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DSTestData", _args, result);
            }
            
            public System.IAsyncResult BeginDSBAGetAllType(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DSBAGetAllType", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDSBAGetAllType(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DSBAGetAllType", _args, result);
            }
            
            public System.IAsyncResult BeginDSBAGetDataByType(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DSBAGetDataByType", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDSBAGetDataByType(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DSBAGetDataByType", _args, result);
            }
            
            public System.IAsyncResult BeginDSBAGetDataByID(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DSBAGetDataByID", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDSBAGetDataByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DSBAGetDataByID", _args, result);
            }
            
            public System.IAsyncResult Begintest00001(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("test00001", _args, callback, asyncState);
                return _result;
            }
            
            public void Endtest00001(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("test00001", _args, result);
            }
            
            public System.IAsyncResult BeginFMFolderAdd(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("FMFolderAdd", _args, callback, asyncState);
                return _result;
            }
            
            public void EndFMFolderAdd(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("FMFolderAdd", _args, result);
            }
            
            public System.IAsyncResult BeginFMFolderDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("FMFolderDelete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndFMFolderDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("FMFolderDelete", _args, result);
            }
            
            public System.IAsyncResult BeginFMGetFileByParent(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("FMGetFileByParent", _args, callback, asyncState);
                return _result;
            }
            
            public void EndFMGetFileByParent(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("FMGetFileByParent", _args, result);
            }
            
            public System.IAsyncResult BeginVSFileSave(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VSFileSave", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVSFileSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VSFileSave", _args, result);
            }
            
            public System.IAsyncResult BeginVSFileReadByID(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VSFileReadByID", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVSFileReadByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VSFileReadByID", _args, result);
            }
            
            public System.IAsyncResult BeginVSFileDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VSFileDelete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVSFileDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VSFileDelete", _args, result);
            }
            
            public System.IAsyncResult BeginVSGetVirtualTable(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VSGetVirtualTable", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVSGetVirtualTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VSGetVirtualTable", _args, result);
            }
            
            public System.IAsyncResult BeginVSGetResources(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VSGetResources", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVSGetResources(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VSGetResources", _args, result);
            }
            
            public System.IAsyncResult BeginVSGetversionsBypageName(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VSGetversionsBypageName", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVSGetversionsBypageName(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VSGetversionsBypageName", _args, result);
            }
            
            public System.IAsyncResult BeginVSGetPudversions(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("VSGetPudversions", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVSGetPudversions(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VSGetPudversions", _args, result);
            }
            
            public System.IAsyncResult BeginVSUpdatePubstate(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VSUpdatePubstate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVSUpdatePubstate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VSUpdatePubstate", _args, result);
            }
            
            public System.IAsyncResult BeginRtdbGetTagByIPTag(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RtdbGetTagByIPTag", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRtdbGetTagByIPTag(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RtdbGetTagByIPTag", _args, result);
            }
            
            public System.IAsyncResult BeginRtdbGetHisData(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RtdbGetHisData", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRtdbGetHisData(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RtdbGetHisData", _args, result);
            }
            
            public System.IAsyncResult BeginRtdbConnTest(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RtdbConnTest", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRtdbConnTest(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RtdbConnTest", _args, result);
            }
            
            public System.IAsyncResult BeginRtdbSave(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RtdbSave", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRtdbSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RtdbSave", _args, result);
            }
            
            public System.IAsyncResult BeginRtdbDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RtdbDelete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRtdbDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RtdbDelete", _args, result);
            }
            
            public System.IAsyncResult BeginRtdbLoad(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RtdbLoad", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRtdbLoad(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RtdbLoad", _args, result);
            }
            
            public System.IAsyncResult BeginRPSave(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RPSave", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRPSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RPSave", _args, result);
            }
            
            public System.IAsyncResult BeginRPLoad(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RPLoad", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRPLoad(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RPLoad", _args, result);
            }
            
            public System.IAsyncResult BeginRPDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RPDelete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRPDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RPDelete", _args, result);
            }
            
            public System.IAsyncResult BeginRGSave(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RGSave", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRGSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RGSave", _args, result);
            }
            
            public System.IAsyncResult BeginRGLoad(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RGLoad", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRGLoad(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RGLoad", _args, result);
            }
            
            public System.IAsyncResult BeginRGDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RGDelete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRGDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RGDelete", _args, result);
            }
            
            public System.IAsyncResult BeginRCSave(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RCSave", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRCSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RCSave", _args, result);
            }
            
            public System.IAsyncResult BeginRCLoad(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RCLoad", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRCLoad(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RCLoad", _args, result);
            }
            
            public System.IAsyncResult BeginRCDelete(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RCDelete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRCDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RCDelete", _args, result);
            }
            
            public System.IAsyncResult BeginRPQueryRTDBinfo(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RPQueryRTDBinfo", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRPQueryRTDBinfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RPQueryRTDBinfo", _args, result);
            }
            
            public System.IAsyncResult BeginRtdbGetpoints(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RtdbGetpoints", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRtdbGetpoints(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RtdbGetpoints", _args, result);
            }
            
            public System.IAsyncResult BeginRCalHistogram(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RCalHistogram", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRCalHistogram(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RCalHistogram", _args, result);
            }
            
            public System.IAsyncResult BeginRCalNormalDis(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RCalNormalDis", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRCalNormalDis(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RCalNormalDis", _args, result);
            }
            
            public System.IAsyncResult BeginRCalProcessCap(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RCalProcessCap", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRCalProcessCap(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RCalProcessCap", _args, result);
            }
            
            public System.IAsyncResult BeginRCalProcessPer(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RCalProcessPer", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRCalProcessPer(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RCalProcessPer", _args, result);
            }
            
            public System.IAsyncResult BeginRCalBoxplot(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RCalBoxplot", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRCalBoxplot(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RCalBoxplot", _args, result);
            }
            
            public System.IAsyncResult BeginRCalMeanRange(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RCalMeanRange", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRCalMeanRange(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RCalMeanRange", _args, result);
            }
            
            public System.IAsyncResult BeginRCal4MR_Plot(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RCal4MR_Plot", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRCal4MR_Plot(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RCal4MR_Plot", _args, result);
            }
            
            public System.IAsyncResult BeginRCalIVPlot(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RCalIVPlot", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRCalIVPlot(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RCalIVPlot", _args, result);
            }
            
            public System.IAsyncResult BeginRCalMeanSDPlot(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("RCalMeanSDPlot", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRCalMeanSDPlot(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RCalMeanSDPlot", _args, result);
            }
            
            public System.IAsyncResult BeginPageExport(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("PageExport", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPageExport(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("PageExport", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteExportFile(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("DeleteExportFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteExportFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteExportFile", _args, result);
            }
            
            public System.IAsyncResult BeginHtmlToPage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("HtmlToPage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndHtmlToPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("HtmlToPage", _args, result);
            }
            
            public System.IAsyncResult BeginHtmlToPdf(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("HtmlToPdf", _args, callback, asyncState);
                return _result;
            }
            
            public void EndHtmlToPdf(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("HtmlToPdf", _args, result);
            }
            
            public System.IAsyncResult BeginMagicExport(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("MagicExport", _args, callback, asyncState);
                return _result;
            }
            
            public void EndMagicExport(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("MagicExport", _args, result);
            }
            
            public System.IAsyncResult BegindeleteFile(string filePath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = filePath;
                System.IAsyncResult _result = base.BeginInvoke("deleteFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EnddeleteFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("deleteFile", _args, result);
            }
            
            public System.IAsyncResult BeginVTSaveScMethodInfo(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VTSaveScMethodInfo", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTSaveScMethodInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTSaveScMethodInfo", _args, result);
            }
            
            public System.IAsyncResult BeginVTGetScMethodInfoEx(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VTGetScMethodInfoEx", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTGetScMethodInfoEx(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTGetScMethodInfoEx", _args, result);
            }
            
            public System.IAsyncResult BeginVTGetScMethodInfo(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VTGetScMethodInfo", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTGetScMethodInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTGetScMethodInfo", _args, result);
            }
            
            public System.IAsyncResult BeginVTReadMethodParams(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VTReadMethodParams", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTReadMethodParams(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTReadMethodParams", _args, result);
            }
            
            public System.IAsyncResult BeginVTReadDataTableSchema(string jsonData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jsonData;
                System.IAsyncResult _result = base.BeginInvoke("VTReadDataTableSchema", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVTReadDataTableSchema(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VTReadDataTableSchema", _args, result);
            }
        }
    }
}
